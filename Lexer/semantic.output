Nonterminals useless in grammar

   funcs
   args
   lista_args
   parte_arr


Terminals unused in grammar

   END
   FUNC


Rules useless in grammar

   81 funcs: FUNC tipo ID LPAR args RPAR LCURLYB decls sents RCURLYB funcs
   82      | %empty

   83 args: lista_args
   84     | %empty

   85 lista_args: lista_args COMMA tipo ID parte_arr
   86           | tipo ID parte_arr

   87 parte_arr: LBRACKET RBRACKET parte_arr
   88          | %empty


Grammar

    0 $accept: prog $end

    1 $@1: %empty

    2 $@2: %empty

    3 prog: $@1 decls $@2 sent

    4 $@3: %empty

    5 decls: tipo $@3 lista SEMICOLON decls
    6      | %empty

    7 tipo: INTTYPE
    8     | FLOATTYPE
    9     | DOUBLETYPE
   10     | CHARTYPE
   11     | VOID

   12 $@4: %empty

   13 tipo: STRUCT LCURLYB $@4 decls RCURLYB

   14 lista: lista COMMA ID arreglo
   15      | ID arreglo

   16 numero: signo INT
   17       | signo DOUBLE
   18       | signo FLOAT

   19 signo: PLUS
   20      | MINUS
   21      | %empty

   22 arreglo: LBRACKET numero RBRACKET arreglo
   23        | %empty

   24 $@5: %empty

   25 sents: sents $@5 sent
   26      | sent

   27 $@6: %empty

   28 $@7: %empty

   29 sent: IF LPAR cond RPAR $@6 sent $@7 sentp
   30     | WHILE LPAR cond RPAR sent
   31     | DO sent WHILE LPAR cond RPAR SEMICOLON
   32     | FOR LPAR sent SEMICOLON cond SEMICOLON sent RPAR sent
   33     | parte_izq ASSIG exp SEMICOLON
   34     | RETURN exp SEMICOLON
   35     | RETURN SEMICOLON
   36     | LCURLYB sents RCURLYB
   37     | SWITCH LPAR exp RPAR LCURLYB casos RCURLYB
   38     | BREAK SEMICOLON
   39     | PRINT exp SEMICOLON

   40 sentp: %empty

   41 $@8: %empty

   42 sentp: ELSE $@8 sent

   43 casos: CASE numero sent casos
   44      | DEFAULT sent
   45      | %empty

   46 parte_izq: ID
   47          | var_arr
   48          | ID DOT ID

   49 var_arr: ID LBRACKET exp RBRACKET
   50        | var_arr LBRACKET exp RBRACKET

   51 exp: exp PLUS exp
   52    | exp MINUS exp
   53    | exp PROD exp
   54    | exp DIV exp
   55    | exp MOD exp
   56    | var_arr
   57    | ID
   58    | CADENA
   59    | numero
   60    | CARACTER
   61    | ID LPAR params RPAR

   62 params: lista_param
   63       | %empty

   64 lista_param: lista_param COMMA exp
   65            | exp

   66 $@9: %empty

   67 cond: cond OR $@9 cond

   68 $@10: %empty

   69 cond: cond AND $@10 cond
   70     | NOT cond
   71     | LPAR cond RPAR
   72     | exp rel exp
   73     | TRUE
   74     | FALSE

   75 rel: LT
   76    | GT
   77    | LEQ
   78    | GEQ
   79    | NEQ
   80    | EQ


Terminals, with rules where they appear

$end (0) 0
error (256)
END (258)
INTTYPE (259) 7
FLOATTYPE (260) 8
DOUBLETYPE (261) 9
CHARTYPE (262) 10
VOID (263) 11
FUNC (264)
STRUCT (265) 13
LCURLYB (266) 13 36 37
RCURLYB (267) 13 36 37
LBRACKET (268) 22 49 50
RBRACKET (269) 22 49 50
SEMICOLON (270) 5 31 32 33 34 35 38 39
DOT (271) 48
TRUE (272) 73
FALSE (273) 74
IF (274) 29
ELSE (275) 42
WHILE (276) 30 31
DO (277) 31
SWITCH (278) 37
CASE (279) 43
DEFAULT (280) 44
BREAK (281) 38
PRINT (282) 39
ID (283) 14 15 46 48 49 57 61
INT (284) 16
DOUBLE (285) 17
FLOAT (286) 18
CADENA (287) 58
CARACTER (288) 60
COMMA (289) 14 64
RETURN (290) 34 35
FOR (291) 32
ASSIG (292) 33
OR (293) 67
AND (294) 69
EQ (295) 80
NEQ (296) 79
GT (297) 76
GEQ (298) 78
LT (299) 75
LEQ (300) 77
PLUS (301) 19 51
MINUS (302) 20 52
PROD (303) 53
DIV (304) 54
MOD (305) 55
NOT (306) 70
LPAR (307) 29 30 31 32 37 61 71
RPAR (308) 29 30 31 32 37 61 71
IFX (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
prog (56)
    on left: 3, on right: 0
$@1 (57)
    on left: 1, on right: 3
$@2 (58)
    on left: 2, on right: 3
decls (59)
    on left: 5 6, on right: 3 5 13
$@3 (60)
    on left: 4, on right: 5
tipo (61)
    on left: 7 8 9 10 11 13, on right: 5
$@4 (62)
    on left: 12, on right: 13
lista (63)
    on left: 14 15, on right: 5 14
numero (64)
    on left: 16 17 18, on right: 22 43 59
signo (65)
    on left: 19 20 21, on right: 16 17 18
arreglo (66)
    on left: 22 23, on right: 14 15 22
sents (67)
    on left: 25 26, on right: 25 36
$@5 (68)
    on left: 24, on right: 25
sent (69)
    on left: 29 30 31 32 33 34 35 36 37 38 39, on right: 3 25 26 29
    30 31 32 42 43 44
$@6 (70)
    on left: 27, on right: 29
$@7 (71)
    on left: 28, on right: 29
sentp (72)
    on left: 40 42, on right: 29
$@8 (73)
    on left: 41, on right: 42
casos (74)
    on left: 43 44 45, on right: 37 43
parte_izq (75)
    on left: 46 47 48, on right: 33
var_arr (76)
    on left: 49 50, on right: 47 50 56
exp (77)
    on left: 51 52 53 54 55 56 57 58 59 60 61, on right: 33 34 37 39
    49 50 51 52 53 54 55 64 65 72
params (78)
    on left: 62 63, on right: 61
lista_param (79)
    on left: 64 65, on right: 62 64
cond (80)
    on left: 67 69 70 71 72 73 74, on right: 29 30 31 32 67 69 70 71
$@9 (81)
    on left: 66, on right: 67
$@10 (82)
    on left: 68, on right: 69
rel (83)
    on left: 75 76 77 78 79 80, on right: 72


State 0

    0 $accept: . prog $end

    $default  reduce using rule 1 ($@1)

    prog  go to state 1
    $@1   go to state 2


State 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


State 2

    3 prog: $@1 . decls $@2 sent

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 6 (decls)

    decls  go to state 10
    tipo   go to state 11


State 3

    0 $accept: prog $end .

    $default  accept


State 4

    7 tipo: INTTYPE .

    $default  reduce using rule 7 (tipo)


State 5

    8 tipo: FLOATTYPE .

    $default  reduce using rule 8 (tipo)


State 6

    9 tipo: DOUBLETYPE .

    $default  reduce using rule 9 (tipo)


State 7

   10 tipo: CHARTYPE .

    $default  reduce using rule 10 (tipo)


State 8

   11 tipo: VOID .

    $default  reduce using rule 11 (tipo)


State 9

   13 tipo: STRUCT . LCURLYB $@4 decls RCURLYB

    LCURLYB  shift, and go to state 12


State 10

    3 prog: $@1 decls . $@2 sent

    $default  reduce using rule 2 ($@2)

    $@2  go to state 13


State 11

    5 decls: tipo . $@3 lista SEMICOLON decls

    $default  reduce using rule 4 ($@3)

    $@3  go to state 14


State 12

   13 tipo: STRUCT LCURLYB . $@4 decls RCURLYB

    $default  reduce using rule 12 ($@4)

    $@4  go to state 15


State 13

    3 prog: $@1 decls $@2 . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 26
    parte_izq  go to state 27
    var_arr    go to state 28


State 14

    5 decls: tipo $@3 . lista SEMICOLON decls

    ID  shift, and go to state 29

    lista  go to state 30


State 15

   13 tipo: STRUCT LCURLYB $@4 . decls RCURLYB

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 6 (decls)

    decls  go to state 31
    tipo   go to state 11


State 16

   36 sent: LCURLYB . sents RCURLYB

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sents      go to state 32
    sent       go to state 33
    parte_izq  go to state 27
    var_arr    go to state 28


State 17

   29 sent: IF . LPAR cond RPAR $@6 sent $@7 sentp

    LPAR  shift, and go to state 34


State 18

   30 sent: WHILE . LPAR cond RPAR sent

    LPAR  shift, and go to state 35


State 19

   31 sent: DO . sent WHILE LPAR cond RPAR SEMICOLON

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 36
    parte_izq  go to state 27
    var_arr    go to state 28


State 20

   37 sent: SWITCH . LPAR exp RPAR LCURLYB casos RCURLYB

    LPAR  shift, and go to state 37


State 21

   38 sent: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 38


State 22

   39 sent: PRINT . exp SEMICOLON

    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 47


State 23

   46 parte_izq: ID .
   48          | ID . DOT ID
   49 var_arr: ID . LBRACKET exp RBRACKET

    LBRACKET  shift, and go to state 48
    DOT       shift, and go to state 49

    $default  reduce using rule 46 (parte_izq)


State 24

   34 sent: RETURN . exp SEMICOLON
   35     | RETURN . SEMICOLON

    SEMICOLON  shift, and go to state 50
    ID         shift, and go to state 39
    CADENA     shift, and go to state 40
    CARACTER   shift, and go to state 41
    PLUS       shift, and go to state 42
    MINUS      shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 51


State 25

   32 sent: FOR . LPAR sent SEMICOLON cond SEMICOLON sent RPAR sent

    LPAR  shift, and go to state 52


State 26

    3 prog: $@1 decls $@2 sent .

    $default  reduce using rule 3 (prog)


State 27

   33 sent: parte_izq . ASSIG exp SEMICOLON

    ASSIG  shift, and go to state 53


State 28

   47 parte_izq: var_arr .
   50 var_arr: var_arr . LBRACKET exp RBRACKET

    LBRACKET  shift, and go to state 54

    $default  reduce using rule 47 (parte_izq)


State 29

   15 lista: ID . arreglo

    LBRACKET  shift, and go to state 55

    $default  reduce using rule 23 (arreglo)

    arreglo  go to state 56


State 30

    5 decls: tipo $@3 lista . SEMICOLON decls
   14 lista: lista . COMMA ID arreglo

    SEMICOLON  shift, and go to state 57
    COMMA      shift, and go to state 58


State 31

   13 tipo: STRUCT LCURLYB $@4 decls . RCURLYB

    RCURLYB  shift, and go to state 59


State 32

   25 sents: sents . $@5 sent
   36 sent: LCURLYB sents . RCURLYB

    RCURLYB  shift, and go to state 60

    $default  reduce using rule 24 ($@5)

    $@5  go to state 61


State 33

   26 sents: sent .

    $default  reduce using rule 26 (sents)


State 34

   29 sent: IF LPAR . cond RPAR $@6 sent $@7 sentp

    TRUE      shift, and go to state 62
    FALSE     shift, and go to state 63
    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    NOT       shift, and go to state 64
    LPAR      shift, and go to state 65

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 66
    cond     go to state 67


State 35

   30 sent: WHILE LPAR . cond RPAR sent

    TRUE      shift, and go to state 62
    FALSE     shift, and go to state 63
    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    NOT       shift, and go to state 64
    LPAR      shift, and go to state 65

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 66
    cond     go to state 68


State 36

   31 sent: DO sent . WHILE LPAR cond RPAR SEMICOLON

    WHILE  shift, and go to state 69


State 37

   37 sent: SWITCH LPAR . exp RPAR LCURLYB casos RCURLYB

    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 70


State 38

   38 sent: BREAK SEMICOLON .

    $default  reduce using rule 38 (sent)


State 39

   49 var_arr: ID . LBRACKET exp RBRACKET
   57 exp: ID .
   61    | ID . LPAR params RPAR

    LBRACKET  shift, and go to state 48
    LPAR      shift, and go to state 71

    $default  reduce using rule 57 (exp)


State 40

   58 exp: CADENA .

    $default  reduce using rule 58 (exp)


State 41

   60 exp: CARACTER .

    $default  reduce using rule 60 (exp)


State 42

   19 signo: PLUS .

    $default  reduce using rule 19 (signo)


State 43

   20 signo: MINUS .

    $default  reduce using rule 20 (signo)


State 44

   59 exp: numero .

    $default  reduce using rule 59 (exp)


State 45

   16 numero: signo . INT
   17       | signo . DOUBLE
   18       | signo . FLOAT

    INT     shift, and go to state 72
    DOUBLE  shift, and go to state 73
    FLOAT   shift, and go to state 74


State 46

   50 var_arr: var_arr . LBRACKET exp RBRACKET
   56 exp: var_arr .

    LBRACKET  shift, and go to state 54

    $default  reduce using rule 56 (exp)


State 47

   39 sent: PRINT exp . SEMICOLON
   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    SEMICOLON  shift, and go to state 75
    PLUS       shift, and go to state 76
    MINUS      shift, and go to state 77
    PROD       shift, and go to state 78
    DIV        shift, and go to state 79
    MOD        shift, and go to state 80


State 48

   49 var_arr: ID LBRACKET . exp RBRACKET

    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 81


State 49

   48 parte_izq: ID DOT . ID

    ID  shift, and go to state 82


State 50

   35 sent: RETURN SEMICOLON .

    $default  reduce using rule 35 (sent)


State 51

   34 sent: RETURN exp . SEMICOLON
   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    SEMICOLON  shift, and go to state 83
    PLUS       shift, and go to state 76
    MINUS      shift, and go to state 77
    PROD       shift, and go to state 78
    DIV        shift, and go to state 79
    MOD        shift, and go to state 80


State 52

   32 sent: FOR LPAR . sent SEMICOLON cond SEMICOLON sent RPAR sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 84
    parte_izq  go to state 27
    var_arr    go to state 28


State 53

   33 sent: parte_izq ASSIG . exp SEMICOLON

    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 85


State 54

   50 var_arr: var_arr LBRACKET . exp RBRACKET

    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 86


State 55

   22 arreglo: LBRACKET . numero RBRACKET arreglo

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero  go to state 87
    signo   go to state 45


State 56

   15 lista: ID arreglo .

    $default  reduce using rule 15 (lista)


State 57

    5 decls: tipo $@3 lista SEMICOLON . decls

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 6 (decls)

    decls  go to state 88
    tipo   go to state 11


State 58

   14 lista: lista COMMA . ID arreglo

    ID  shift, and go to state 89


State 59

   13 tipo: STRUCT LCURLYB $@4 decls RCURLYB .

    $default  reduce using rule 13 (tipo)


State 60

   36 sent: LCURLYB sents RCURLYB .

    $default  reduce using rule 36 (sent)


State 61

   25 sents: sents $@5 . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 90
    parte_izq  go to state 27
    var_arr    go to state 28


State 62

   73 cond: TRUE .

    $default  reduce using rule 73 (cond)


State 63

   74 cond: FALSE .

    $default  reduce using rule 74 (cond)


State 64

   70 cond: NOT . cond

    TRUE      shift, and go to state 62
    FALSE     shift, and go to state 63
    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    NOT       shift, and go to state 64
    LPAR      shift, and go to state 65

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 66
    cond     go to state 91


State 65

   71 cond: LPAR . cond RPAR

    TRUE      shift, and go to state 62
    FALSE     shift, and go to state 63
    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    NOT       shift, and go to state 64
    LPAR      shift, and go to state 65

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 66
    cond     go to state 92


State 66

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp
   72 cond: exp . rel exp

    EQ     shift, and go to state 93
    NEQ    shift, and go to state 94
    GT     shift, and go to state 95
    GEQ    shift, and go to state 96
    LT     shift, and go to state 97
    LEQ    shift, and go to state 98
    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    PROD   shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80

    rel  go to state 99


State 67

   29 sent: IF LPAR cond . RPAR $@6 sent $@7 sentp
   67 cond: cond . OR $@9 cond
   69     | cond . AND $@10 cond

    OR    shift, and go to state 100
    AND   shift, and go to state 101
    RPAR  shift, and go to state 102


State 68

   30 sent: WHILE LPAR cond . RPAR sent
   67 cond: cond . OR $@9 cond
   69     | cond . AND $@10 cond

    OR    shift, and go to state 100
    AND   shift, and go to state 101
    RPAR  shift, and go to state 103


State 69

   31 sent: DO sent WHILE . LPAR cond RPAR SEMICOLON

    LPAR  shift, and go to state 104


State 70

   37 sent: SWITCH LPAR exp . RPAR LCURLYB casos RCURLYB
   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    PROD   shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80
    RPAR   shift, and go to state 105


State 71

   61 exp: ID LPAR . params RPAR

    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43

    RPAR      reduce using rule 63 (params)
    $default  reduce using rule 21 (signo)

    numero       go to state 44
    signo        go to state 45
    var_arr      go to state 46
    exp          go to state 106
    params       go to state 107
    lista_param  go to state 108


State 72

   16 numero: signo INT .

    $default  reduce using rule 16 (numero)


State 73

   17 numero: signo DOUBLE .

    $default  reduce using rule 17 (numero)


State 74

   18 numero: signo FLOAT .

    $default  reduce using rule 18 (numero)


State 75

   39 sent: PRINT exp SEMICOLON .

    $default  reduce using rule 39 (sent)


State 76

   51 exp: exp PLUS . exp

    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 109


State 77

   52 exp: exp MINUS . exp

    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 110


State 78

   53 exp: exp PROD . exp

    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 111


State 79

   54 exp: exp DIV . exp

    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 112


State 80

   55 exp: exp MOD . exp

    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 113


State 81

   49 var_arr: ID LBRACKET exp . RBRACKET
   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    RBRACKET  shift, and go to state 114
    PLUS      shift, and go to state 76
    MINUS     shift, and go to state 77
    PROD      shift, and go to state 78
    DIV       shift, and go to state 79
    MOD       shift, and go to state 80


State 82

   48 parte_izq: ID DOT ID .

    $default  reduce using rule 48 (parte_izq)


State 83

   34 sent: RETURN exp SEMICOLON .

    $default  reduce using rule 34 (sent)


State 84

   32 sent: FOR LPAR sent . SEMICOLON cond SEMICOLON sent RPAR sent

    SEMICOLON  shift, and go to state 115


State 85

   33 sent: parte_izq ASSIG exp . SEMICOLON
   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    SEMICOLON  shift, and go to state 116
    PLUS       shift, and go to state 76
    MINUS      shift, and go to state 77
    PROD       shift, and go to state 78
    DIV        shift, and go to state 79
    MOD        shift, and go to state 80


State 86

   50 var_arr: var_arr LBRACKET exp . RBRACKET
   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    RBRACKET  shift, and go to state 117
    PLUS      shift, and go to state 76
    MINUS     shift, and go to state 77
    PROD      shift, and go to state 78
    DIV       shift, and go to state 79
    MOD       shift, and go to state 80


State 87

   22 arreglo: LBRACKET numero . RBRACKET arreglo

    RBRACKET  shift, and go to state 118


State 88

    5 decls: tipo $@3 lista SEMICOLON decls .

    $default  reduce using rule 5 (decls)


State 89

   14 lista: lista COMMA ID . arreglo

    LBRACKET  shift, and go to state 55

    $default  reduce using rule 23 (arreglo)

    arreglo  go to state 119


State 90

   25 sents: sents $@5 sent .

    $default  reduce using rule 25 (sents)


State 91

   67 cond: cond . OR $@9 cond
   69     | cond . AND $@10 cond
   70     | NOT cond .

    $default  reduce using rule 70 (cond)


State 92

   67 cond: cond . OR $@9 cond
   69     | cond . AND $@10 cond
   71     | LPAR cond . RPAR

    OR    shift, and go to state 100
    AND   shift, and go to state 101
    RPAR  shift, and go to state 120


State 93

   80 rel: EQ .

    $default  reduce using rule 80 (rel)


State 94

   79 rel: NEQ .

    $default  reduce using rule 79 (rel)


State 95

   76 rel: GT .

    $default  reduce using rule 76 (rel)


State 96

   78 rel: GEQ .

    $default  reduce using rule 78 (rel)


State 97

   75 rel: LT .

    $default  reduce using rule 75 (rel)


State 98

   77 rel: LEQ .

    $default  reduce using rule 77 (rel)


State 99

   72 cond: exp rel . exp

    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 121


State 100

   67 cond: cond OR . $@9 cond

    $default  reduce using rule 66 ($@9)

    $@9  go to state 122


State 101

   69 cond: cond AND . $@10 cond

    $default  reduce using rule 68 ($@10)

    $@10  go to state 123


State 102

   29 sent: IF LPAR cond RPAR . $@6 sent $@7 sentp

    $default  reduce using rule 27 ($@6)

    $@6  go to state 124


State 103

   30 sent: WHILE LPAR cond RPAR . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 125
    parte_izq  go to state 27
    var_arr    go to state 28


State 104

   31 sent: DO sent WHILE LPAR . cond RPAR SEMICOLON

    TRUE      shift, and go to state 62
    FALSE     shift, and go to state 63
    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    NOT       shift, and go to state 64
    LPAR      shift, and go to state 65

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 66
    cond     go to state 126


State 105

   37 sent: SWITCH LPAR exp RPAR . LCURLYB casos RCURLYB

    LCURLYB  shift, and go to state 127


State 106

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp
   65 lista_param: exp .

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    PROD   shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80

    $default  reduce using rule 65 (lista_param)


State 107

   61 exp: ID LPAR params . RPAR

    RPAR  shift, and go to state 128


State 108

   62 params: lista_param .
   64 lista_param: lista_param . COMMA exp

    COMMA  shift, and go to state 129

    $default  reduce using rule 62 (params)


State 109

   51 exp: exp . PLUS exp
   51    | exp PLUS exp .
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    PROD  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80

    $default  reduce using rule 51 (exp)


State 110

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   52    | exp MINUS exp .
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    PROD  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80

    $default  reduce using rule 52 (exp)


State 111

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   53    | exp PROD exp .
   54    | exp . DIV exp
   55    | exp . MOD exp

    $default  reduce using rule 53 (exp)


State 112

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   54    | exp DIV exp .
   55    | exp . MOD exp

    $default  reduce using rule 54 (exp)


State 113

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp
   55    | exp MOD exp .

    $default  reduce using rule 55 (exp)


State 114

   49 var_arr: ID LBRACKET exp RBRACKET .

    $default  reduce using rule 49 (var_arr)


State 115

   32 sent: FOR LPAR sent SEMICOLON . cond SEMICOLON sent RPAR sent

    TRUE      shift, and go to state 62
    FALSE     shift, and go to state 63
    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    NOT       shift, and go to state 64
    LPAR      shift, and go to state 65

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 66
    cond     go to state 130


State 116

   33 sent: parte_izq ASSIG exp SEMICOLON .

    $default  reduce using rule 33 (sent)


State 117

   50 var_arr: var_arr LBRACKET exp RBRACKET .

    $default  reduce using rule 50 (var_arr)


State 118

   22 arreglo: LBRACKET numero RBRACKET . arreglo

    LBRACKET  shift, and go to state 55

    $default  reduce using rule 23 (arreglo)

    arreglo  go to state 131


State 119

   14 lista: lista COMMA ID arreglo .

    $default  reduce using rule 14 (lista)


State 120

   71 cond: LPAR cond RPAR .

    $default  reduce using rule 71 (cond)


State 121

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp
   72 cond: exp rel exp .

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    PROD   shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80

    $default  reduce using rule 72 (cond)


State 122

   67 cond: cond OR $@9 . cond

    TRUE      shift, and go to state 62
    FALSE     shift, and go to state 63
    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    NOT       shift, and go to state 64
    LPAR      shift, and go to state 65

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 66
    cond     go to state 132


State 123

   69 cond: cond AND $@10 . cond

    TRUE      shift, and go to state 62
    FALSE     shift, and go to state 63
    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    NOT       shift, and go to state 64
    LPAR      shift, and go to state 65

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 66
    cond     go to state 133


State 124

   29 sent: IF LPAR cond RPAR $@6 . sent $@7 sentp

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 134
    parte_izq  go to state 27
    var_arr    go to state 28


State 125

   30 sent: WHILE LPAR cond RPAR sent .

    $default  reduce using rule 30 (sent)


State 126

   31 sent: DO sent WHILE LPAR cond . RPAR SEMICOLON
   67 cond: cond . OR $@9 cond
   69     | cond . AND $@10 cond

    OR    shift, and go to state 100
    AND   shift, and go to state 101
    RPAR  shift, and go to state 135


State 127

   37 sent: SWITCH LPAR exp RPAR LCURLYB . casos RCURLYB

    CASE     shift, and go to state 136
    DEFAULT  shift, and go to state 137

    $default  reduce using rule 45 (casos)

    casos  go to state 138


State 128

   61 exp: ID LPAR params RPAR .

    $default  reduce using rule 61 (exp)


State 129

   64 lista_param: lista_param COMMA . exp

    ID        shift, and go to state 39
    CADENA    shift, and go to state 40
    CARACTER  shift, and go to state 41
    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero   go to state 44
    signo    go to state 45
    var_arr  go to state 46
    exp      go to state 139


State 130

   32 sent: FOR LPAR sent SEMICOLON cond . SEMICOLON sent RPAR sent
   67 cond: cond . OR $@9 cond
   69     | cond . AND $@10 cond

    SEMICOLON  shift, and go to state 140
    OR         shift, and go to state 100
    AND        shift, and go to state 101


State 131

   22 arreglo: LBRACKET numero RBRACKET arreglo .

    $default  reduce using rule 22 (arreglo)


State 132

   67 cond: cond . OR $@9 cond
   67     | cond OR $@9 cond .
   69     | cond . AND $@10 cond

    AND  shift, and go to state 101

    $default  reduce using rule 67 (cond)


State 133

   67 cond: cond . OR $@9 cond
   69     | cond . AND $@10 cond
   69     | cond AND $@10 cond .

    $default  reduce using rule 69 (cond)


State 134

   29 sent: IF LPAR cond RPAR $@6 sent . $@7 sentp

    $default  reduce using rule 28 ($@7)

    $@7  go to state 141


State 135

   31 sent: DO sent WHILE LPAR cond RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 142


State 136

   43 casos: CASE . numero sent casos

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43

    $default  reduce using rule 21 (signo)

    numero  go to state 143
    signo   go to state 45


State 137

   44 casos: DEFAULT . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 144
    parte_izq  go to state 27
    var_arr    go to state 28


State 138

   37 sent: SWITCH LPAR exp RPAR LCURLYB casos . RCURLYB

    RCURLYB  shift, and go to state 145


State 139

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp
   64 lista_param: lista_param COMMA exp .

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    PROD   shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80

    $default  reduce using rule 64 (lista_param)


State 140

   32 sent: FOR LPAR sent SEMICOLON cond SEMICOLON . sent RPAR sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 146
    parte_izq  go to state 27
    var_arr    go to state 28


State 141

   29 sent: IF LPAR cond RPAR $@6 sent $@7 . sentp

    ELSE  shift, and go to state 147

    $default  reduce using rule 40 (sentp)

    sentp  go to state 148


State 142

   31 sent: DO sent WHILE LPAR cond RPAR SEMICOLON .

    $default  reduce using rule 31 (sent)


State 143

   43 casos: CASE numero . sent casos

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 149
    parte_izq  go to state 27
    var_arr    go to state 28


State 144

   44 casos: DEFAULT sent .

    $default  reduce using rule 44 (casos)


State 145

   37 sent: SWITCH LPAR exp RPAR LCURLYB casos RCURLYB .

    $default  reduce using rule 37 (sent)


State 146

   32 sent: FOR LPAR sent SEMICOLON cond SEMICOLON sent . RPAR sent

    RPAR  shift, and go to state 150


State 147

   42 sentp: ELSE . $@8 sent

    $default  reduce using rule 41 ($@8)

    $@8  go to state 151


State 148

   29 sent: IF LPAR cond RPAR $@6 sent $@7 sentp .

    $default  reduce using rule 29 (sent)


State 149

   43 casos: CASE numero sent . casos

    CASE     shift, and go to state 136
    DEFAULT  shift, and go to state 137

    $default  reduce using rule 45 (casos)

    casos  go to state 152


State 150

   32 sent: FOR LPAR sent SEMICOLON cond SEMICOLON sent RPAR . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 153
    parte_izq  go to state 27
    var_arr    go to state 28


State 151

   42 sentp: ELSE $@8 . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 154
    parte_izq  go to state 27
    var_arr    go to state 28


State 152

   43 casos: CASE numero sent casos .

    $default  reduce using rule 43 (casos)


State 153

   32 sent: FOR LPAR sent SEMICOLON cond SEMICOLON sent RPAR sent .

    $default  reduce using rule 32 (sent)


State 154

   42 sentp: ELSE $@8 sent .

    $default  reduce using rule 42 (sentp)
