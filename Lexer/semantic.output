Nonterminals useless in grammar

   funcs
   args
   lista_args
   parte_arr
   sents


Terminals unused in grammar

   END
   FUNC


Rules useless in grammar

   74 funcs: FUNC tipo ID LPAR args RPAR LCURLYB decls sents RCURLYB funcs
   75      | %empty

   76 args: lista_args
   77     | %empty

   78 lista_args: lista_args COMMA tipo ID parte_arr
   79           | tipo ID parte_arr

   80 parte_arr: LBRACKET RBRACKET parte_arr
   81          | %empty

   82 sents: sents sent
   83      | sent


Grammar

    0 $accept: prog $end

    1 $@1: %empty

    2 $@2: %empty

    3 prog: $@1 decls $@2 sent

    4 $@3: %empty

    5 decls: tipo $@3 lista SEMICOLON decls
    6      | %empty

    7 tipo: INTTYPE
    8     | FLOATTYPE
    9     | DOUBLETYPE
   10     | CHARTYPE
   11     | VOID

   12 $@4: %empty

   13 tipo: STRUCT LCURLYB $@4 decls RCURLYB

   14 lista: lista COMMA ID arreglo
   15      | ID arreglo

   16 numero: signo INT
   17       | signo DOUBLE
   18       | signo FLOAT

   19 signo: PLUS
   20      | MINUS
   21      | %empty

   22 arreglo: LBRACKET numero RBRACKET arreglo
   23        | %empty

   24 sent: IF LPAR cond RPAR sent
   25     | IF LPAR cond RPAR sent ELSE sent
   26     | WHILE LPAR cond RPAR sent
   27     | DO sent WHILE LPAR cond RPAR SEMICOLON
   28     | FOR LPAR sent SEMICOLON cond SEMICOLON sent RPAR sent
   29     | parte_izq ASSIG exp SEMICOLON
   30     | RETURN exp SEMICOLON
   31     | RETURN SEMICOLON
   32     | LCURLYB sent RCURLYB
   33     | SWITCH LPAR exp RPAR LCURLYB casos RCURLYB
   34     | BREAK SEMICOLON
   35     | PRINT exp SEMICOLON

   36 casos: CASE numero sent casos
   37      | DEFAULT sent
   38      | %empty

   39 parte_izq: ID
   40          | var_arr
   41          | ID DOT ID

   42 var_arr: ID LBRACKET exp RBRACKET
   43        | var_arr LBRACKET exp RBRACKET

   44 exp: exp PLUS exp
   45    | exp MINUS exp
   46    | exp PROD exp
   47    | exp DIV exp
   48    | exp MOD exp
   49    | var_arr
   50    | ID
   51    | CADENA
   52    | numero
   53    | CARACTER
   54    | ID LPAR params RPAR

   55 params: lista_param
   56       | %empty

   57 lista_param: lista_param COMMA exp
   58            | exp

   59 $@5: %empty

   60 cond: cond OR $@5 cond

   61 $@6: %empty

   62 cond: cond AND $@6 cond
   63     | NOT cond
   64     | LPAR cond RPAR
   65     | exp rel exp
   66     | TRUE
   67     | FALSE

   68 rel: LT
   69    | GT
   70    | LEQ
   71    | GEQ
   72    | NEQ
   73    | EQ


Terminals, with rules where they appear

$end (0) 0
error (256)
END (258)
INTTYPE (259) 7
FLOATTYPE (260) 8
DOUBLETYPE (261) 9
CHARTYPE (262) 10
VOID (263) 11
FUNC (264)
STRUCT (265) 13
LCURLYB (266) 13 32 33
RCURLYB (267) 13 32 33
LBRACKET (268) 22 42 43
RBRACKET (269) 22 42 43
SEMICOLON (270) 5 27 28 29 30 31 34 35
DOT (271) 41
TRUE (272) 66
FALSE (273) 67
IF (274) 24 25
ELSE (275) 25
WHILE (276) 26 27
DO (277) 27
SWITCH (278) 33
CASE (279) 36
DEFAULT (280) 37
BREAK (281) 34
PRINT (282) 35
ID (283) 14 15 39 41 42 50 54
INT (284) 16
DOUBLE (285) 17
FLOAT (286) 18
CADENA (287) 51
CARACTER (288) 53
COMMA (289) 14 57
RETURN (290) 30 31
FOR (291) 28
ASSIG (292) 29
OR (293) 60
AND (294) 62
EQ (295) 73
NEQ (296) 72
GT (297) 69
GEQ (298) 71
LT (299) 68
LEQ (300) 70
PLUS (301) 19 44
MINUS (302) 20 45
PROD (303) 46
DIV (304) 47
MOD (305) 48
NOT (306) 63
LPAR (307) 24 25 26 27 28 33 54 64
RPAR (308) 24 25 26 27 28 33 54 64
"then" (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
prog (56)
    on left: 3, on right: 0
$@1 (57)
    on left: 1, on right: 3
$@2 (58)
    on left: 2, on right: 3
decls (59)
    on left: 5 6, on right: 3 5 13
$@3 (60)
    on left: 4, on right: 5
tipo (61)
    on left: 7 8 9 10 11 13, on right: 5
$@4 (62)
    on left: 12, on right: 13
lista (63)
    on left: 14 15, on right: 5 14
numero (64)
    on left: 16 17 18, on right: 22 36 52
signo (65)
    on left: 19 20 21, on right: 16 17 18
arreglo (66)
    on left: 22 23, on right: 14 15 22
sent (67)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35, on right: 3 24 25
    26 27 28 32 36 37
casos (68)
    on left: 36 37 38, on right: 33 36
parte_izq (69)
    on left: 39 40 41, on right: 29
var_arr (70)
    on left: 42 43, on right: 40 43 49
exp (71)
    on left: 44 45 46 47 48 49 50 51 52 53 54, on right: 29 30 33 35
    42 43 44 45 46 47 48 57 58 65
params (72)
    on left: 55 56, on right: 54
lista_param (73)
    on left: 57 58, on right: 55 57
cond (74)
    on left: 60 62 63 64 65 66 67, on right: 24 25 26 27 28 60 62 63
    64
$@5 (75)
    on left: 59, on right: 60
$@6 (76)
    on left: 61, on right: 62
rel (77)
    on left: 68 69 70 71 72 73, on right: 65


State 0

    0 $accept: . prog $end

    $default  reduce using rule 1 ($@1)

    prog  go to state 1
    $@1   go to state 2


State 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


State 2

    3 prog: $@1 . decls $@2 sent

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 6 (decls)

    decls  go to state 10
    tipo   go to state 11


State 3

    0 $accept: prog $end .

    $default  accept


State 4

    7 tipo: INTTYPE .

    $default  reduce using rule 7 (tipo)


State 5

    8 tipo: FLOATTYPE .

    $default  reduce using rule 8 (tipo)


State 6

    9 tipo: DOUBLETYPE .

    $default  reduce using rule 9 (tipo)


State 7

   10 tipo: CHARTYPE .

    $default  reduce using rule 10 (tipo)


State 8

   11 tipo: VOID .

    $default  reduce using rule 11 (tipo)


State 9

   13 tipo: STRUCT . LCURLYB $@4 decls RCURLYB

    LCURLYB  shift, and go to state 12


State 10

    3 prog: $@1 decls . $@2 sent

    $default  reduce using rule 2 ($@2)

    $@2  go to state 13


State 11

    5 decls: tipo . $@3 lista SEMICOLON decls

    $default  reduce using rule 4 ($@3)

    $@3  go to state 14


State 12

   13 tipo: STRUCT LCURLYB . $@4 decls RCURLYB

    $default  reduce using rule 12 ($@4)

    $@4  go to state 15


State 13

    3 prog: $@1 decls $@2 . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 26
    parte_izq  go to state 27
    var_arr    go to state 28


State 14

    5 decls: tipo $@3 . lista SEMICOLON decls

    ID  shift, and go to state 29

    lista  go to state 30


State 15

   13 tipo: STRUCT LCURLYB $@4 . decls RCURLYB

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 6 (decls)

    decls  go to state 31
    tipo   go to state 11


State 16

   32 sent: LCURLYB . sent RCURLYB

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 32
    parte_izq  go to state 27
    var_arr    go to state 28


State 17

   24 sent: IF . LPAR cond RPAR sent
   25     | IF . LPAR cond RPAR sent ELSE sent

    LPAR  shift, and go to state 33


State 18

   26 sent: WHILE . LPAR cond RPAR sent

    LPAR  shift, and go to state 34


State 19

   27 sent: DO . sent WHILE LPAR cond RPAR SEMICOLON

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 35
    parte_izq  go to state 27
    var_arr    go to state 28


State 20

   33 sent: SWITCH . LPAR exp RPAR LCURLYB casos RCURLYB

    LPAR  shift, and go to state 36


State 21

   34 sent: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 37


State 22

   35 sent: PRINT . exp SEMICOLON

    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 46


State 23

   39 parte_izq: ID .
   41          | ID . DOT ID
   42 var_arr: ID . LBRACKET exp RBRACKET

    LBRACKET  shift, and go to state 47
    DOT       shift, and go to state 48

    $default  reduce using rule 39 (parte_izq)


State 24

   30 sent: RETURN . exp SEMICOLON
   31     | RETURN . SEMICOLON

    SEMICOLON  shift, and go to state 49
    ID         shift, and go to state 38
    CADENA     shift, and go to state 39
    CARACTER   shift, and go to state 40
    PLUS       shift, and go to state 41
    MINUS      shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 50


State 25

   28 sent: FOR . LPAR sent SEMICOLON cond SEMICOLON sent RPAR sent

    LPAR  shift, and go to state 51


State 26

    3 prog: $@1 decls $@2 sent .

    $default  reduce using rule 3 (prog)


State 27

   29 sent: parte_izq . ASSIG exp SEMICOLON

    ASSIG  shift, and go to state 52


State 28

   40 parte_izq: var_arr .
   43 var_arr: var_arr . LBRACKET exp RBRACKET

    LBRACKET  shift, and go to state 53

    $default  reduce using rule 40 (parte_izq)


State 29

   15 lista: ID . arreglo

    LBRACKET  shift, and go to state 54

    $default  reduce using rule 23 (arreglo)

    arreglo  go to state 55


State 30

    5 decls: tipo $@3 lista . SEMICOLON decls
   14 lista: lista . COMMA ID arreglo

    SEMICOLON  shift, and go to state 56
    COMMA      shift, and go to state 57


State 31

   13 tipo: STRUCT LCURLYB $@4 decls . RCURLYB

    RCURLYB  shift, and go to state 58


State 32

   32 sent: LCURLYB sent . RCURLYB

    RCURLYB  shift, and go to state 59


State 33

   24 sent: IF LPAR . cond RPAR sent
   25     | IF LPAR . cond RPAR sent ELSE sent

    TRUE      shift, and go to state 60
    FALSE     shift, and go to state 61
    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    NOT       shift, and go to state 62
    LPAR      shift, and go to state 63

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 64
    cond     go to state 65


State 34

   26 sent: WHILE LPAR . cond RPAR sent

    TRUE      shift, and go to state 60
    FALSE     shift, and go to state 61
    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    NOT       shift, and go to state 62
    LPAR      shift, and go to state 63

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 64
    cond     go to state 66


State 35

   27 sent: DO sent . WHILE LPAR cond RPAR SEMICOLON

    WHILE  shift, and go to state 67


State 36

   33 sent: SWITCH LPAR . exp RPAR LCURLYB casos RCURLYB

    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 68


State 37

   34 sent: BREAK SEMICOLON .

    $default  reduce using rule 34 (sent)


State 38

   42 var_arr: ID . LBRACKET exp RBRACKET
   50 exp: ID .
   54    | ID . LPAR params RPAR

    LBRACKET  shift, and go to state 47
    LPAR      shift, and go to state 69

    $default  reduce using rule 50 (exp)


State 39

   51 exp: CADENA .

    $default  reduce using rule 51 (exp)


State 40

   53 exp: CARACTER .

    $default  reduce using rule 53 (exp)


State 41

   19 signo: PLUS .

    $default  reduce using rule 19 (signo)


State 42

   20 signo: MINUS .

    $default  reduce using rule 20 (signo)


State 43

   52 exp: numero .

    $default  reduce using rule 52 (exp)


State 44

   16 numero: signo . INT
   17       | signo . DOUBLE
   18       | signo . FLOAT

    INT     shift, and go to state 70
    DOUBLE  shift, and go to state 71
    FLOAT   shift, and go to state 72


State 45

   43 var_arr: var_arr . LBRACKET exp RBRACKET
   49 exp: var_arr .

    LBRACKET  shift, and go to state 53

    $default  reduce using rule 49 (exp)


State 46

   35 sent: PRINT exp . SEMICOLON
   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . PROD exp
   47    | exp . DIV exp
   48    | exp . MOD exp

    SEMICOLON  shift, and go to state 73
    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75
    PROD       shift, and go to state 76
    DIV        shift, and go to state 77
    MOD        shift, and go to state 78


State 47

   42 var_arr: ID LBRACKET . exp RBRACKET

    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 79


State 48

   41 parte_izq: ID DOT . ID

    ID  shift, and go to state 80


State 49

   31 sent: RETURN SEMICOLON .

    $default  reduce using rule 31 (sent)


State 50

   30 sent: RETURN exp . SEMICOLON
   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . PROD exp
   47    | exp . DIV exp
   48    | exp . MOD exp

    SEMICOLON  shift, and go to state 81
    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75
    PROD       shift, and go to state 76
    DIV        shift, and go to state 77
    MOD        shift, and go to state 78


State 51

   28 sent: FOR LPAR . sent SEMICOLON cond SEMICOLON sent RPAR sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 82
    parte_izq  go to state 27
    var_arr    go to state 28


State 52

   29 sent: parte_izq ASSIG . exp SEMICOLON

    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 83


State 53

   43 var_arr: var_arr LBRACKET . exp RBRACKET

    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 84


State 54

   22 arreglo: LBRACKET . numero RBRACKET arreglo

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero  go to state 85
    signo   go to state 44


State 55

   15 lista: ID arreglo .

    $default  reduce using rule 15 (lista)


State 56

    5 decls: tipo $@3 lista SEMICOLON . decls

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 6 (decls)

    decls  go to state 86
    tipo   go to state 11


State 57

   14 lista: lista COMMA . ID arreglo

    ID  shift, and go to state 87


State 58

   13 tipo: STRUCT LCURLYB $@4 decls RCURLYB .

    $default  reduce using rule 13 (tipo)


State 59

   32 sent: LCURLYB sent RCURLYB .

    $default  reduce using rule 32 (sent)


State 60

   66 cond: TRUE .

    $default  reduce using rule 66 (cond)


State 61

   67 cond: FALSE .

    $default  reduce using rule 67 (cond)


State 62

   63 cond: NOT . cond

    TRUE      shift, and go to state 60
    FALSE     shift, and go to state 61
    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    NOT       shift, and go to state 62
    LPAR      shift, and go to state 63

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 64
    cond     go to state 88


State 63

   64 cond: LPAR . cond RPAR

    TRUE      shift, and go to state 60
    FALSE     shift, and go to state 61
    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    NOT       shift, and go to state 62
    LPAR      shift, and go to state 63

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 64
    cond     go to state 89


State 64

   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . PROD exp
   47    | exp . DIV exp
   48    | exp . MOD exp
   65 cond: exp . rel exp

    EQ     shift, and go to state 90
    NEQ    shift, and go to state 91
    GT     shift, and go to state 92
    GEQ    shift, and go to state 93
    LT     shift, and go to state 94
    LEQ    shift, and go to state 95
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    PROD   shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    rel  go to state 96


State 65

   24 sent: IF LPAR cond . RPAR sent
   25     | IF LPAR cond . RPAR sent ELSE sent
   60 cond: cond . OR $@5 cond
   62     | cond . AND $@6 cond

    OR    shift, and go to state 97
    AND   shift, and go to state 98
    RPAR  shift, and go to state 99


State 66

   26 sent: WHILE LPAR cond . RPAR sent
   60 cond: cond . OR $@5 cond
   62     | cond . AND $@6 cond

    OR    shift, and go to state 97
    AND   shift, and go to state 98
    RPAR  shift, and go to state 100


State 67

   27 sent: DO sent WHILE . LPAR cond RPAR SEMICOLON

    LPAR  shift, and go to state 101


State 68

   33 sent: SWITCH LPAR exp . RPAR LCURLYB casos RCURLYB
   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . PROD exp
   47    | exp . DIV exp
   48    | exp . MOD exp

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    PROD   shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78
    RPAR   shift, and go to state 102


State 69

   54 exp: ID LPAR . params RPAR

    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42

    RPAR      reduce using rule 56 (params)
    $default  reduce using rule 21 (signo)

    numero       go to state 43
    signo        go to state 44
    var_arr      go to state 45
    exp          go to state 103
    params       go to state 104
    lista_param  go to state 105


State 70

   16 numero: signo INT .

    $default  reduce using rule 16 (numero)


State 71

   17 numero: signo DOUBLE .

    $default  reduce using rule 17 (numero)


State 72

   18 numero: signo FLOAT .

    $default  reduce using rule 18 (numero)


State 73

   35 sent: PRINT exp SEMICOLON .

    $default  reduce using rule 35 (sent)


State 74

   44 exp: exp PLUS . exp

    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 106


State 75

   45 exp: exp MINUS . exp

    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 107


State 76

   46 exp: exp PROD . exp

    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 108


State 77

   47 exp: exp DIV . exp

    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 109


State 78

   48 exp: exp MOD . exp

    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 110


State 79

   42 var_arr: ID LBRACKET exp . RBRACKET
   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . PROD exp
   47    | exp . DIV exp
   48    | exp . MOD exp

    RBRACKET  shift, and go to state 111
    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    PROD      shift, and go to state 76
    DIV       shift, and go to state 77
    MOD       shift, and go to state 78


State 80

   41 parte_izq: ID DOT ID .

    $default  reduce using rule 41 (parte_izq)


State 81

   30 sent: RETURN exp SEMICOLON .

    $default  reduce using rule 30 (sent)


State 82

   28 sent: FOR LPAR sent . SEMICOLON cond SEMICOLON sent RPAR sent

    SEMICOLON  shift, and go to state 112


State 83

   29 sent: parte_izq ASSIG exp . SEMICOLON
   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . PROD exp
   47    | exp . DIV exp
   48    | exp . MOD exp

    SEMICOLON  shift, and go to state 113
    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75
    PROD       shift, and go to state 76
    DIV        shift, and go to state 77
    MOD        shift, and go to state 78


State 84

   43 var_arr: var_arr LBRACKET exp . RBRACKET
   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . PROD exp
   47    | exp . DIV exp
   48    | exp . MOD exp

    RBRACKET  shift, and go to state 114
    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    PROD      shift, and go to state 76
    DIV       shift, and go to state 77
    MOD       shift, and go to state 78


State 85

   22 arreglo: LBRACKET numero . RBRACKET arreglo

    RBRACKET  shift, and go to state 115


State 86

    5 decls: tipo $@3 lista SEMICOLON decls .

    $default  reduce using rule 5 (decls)


State 87

   14 lista: lista COMMA ID . arreglo

    LBRACKET  shift, and go to state 54

    $default  reduce using rule 23 (arreglo)

    arreglo  go to state 116


State 88

   60 cond: cond . OR $@5 cond
   62     | cond . AND $@6 cond
   63     | NOT cond .

    $default  reduce using rule 63 (cond)


State 89

   60 cond: cond . OR $@5 cond
   62     | cond . AND $@6 cond
   64     | LPAR cond . RPAR

    OR    shift, and go to state 97
    AND   shift, and go to state 98
    RPAR  shift, and go to state 117


State 90

   73 rel: EQ .

    $default  reduce using rule 73 (rel)


State 91

   72 rel: NEQ .

    $default  reduce using rule 72 (rel)


State 92

   69 rel: GT .

    $default  reduce using rule 69 (rel)


State 93

   71 rel: GEQ .

    $default  reduce using rule 71 (rel)


State 94

   68 rel: LT .

    $default  reduce using rule 68 (rel)


State 95

   70 rel: LEQ .

    $default  reduce using rule 70 (rel)


State 96

   65 cond: exp rel . exp

    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 118


State 97

   60 cond: cond OR . $@5 cond

    $default  reduce using rule 59 ($@5)

    $@5  go to state 119


State 98

   62 cond: cond AND . $@6 cond

    $default  reduce using rule 61 ($@6)

    $@6  go to state 120


State 99

   24 sent: IF LPAR cond RPAR . sent
   25     | IF LPAR cond RPAR . sent ELSE sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 121
    parte_izq  go to state 27
    var_arr    go to state 28


State 100

   26 sent: WHILE LPAR cond RPAR . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 122
    parte_izq  go to state 27
    var_arr    go to state 28


State 101

   27 sent: DO sent WHILE LPAR . cond RPAR SEMICOLON

    TRUE      shift, and go to state 60
    FALSE     shift, and go to state 61
    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    NOT       shift, and go to state 62
    LPAR      shift, and go to state 63

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 64
    cond     go to state 123


State 102

   33 sent: SWITCH LPAR exp RPAR . LCURLYB casos RCURLYB

    LCURLYB  shift, and go to state 124


State 103

   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . PROD exp
   47    | exp . DIV exp
   48    | exp . MOD exp
   58 lista_param: exp .

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    PROD   shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 58 (lista_param)


State 104

   54 exp: ID LPAR params . RPAR

    RPAR  shift, and go to state 125


State 105

   55 params: lista_param .
   57 lista_param: lista_param . COMMA exp

    COMMA  shift, and go to state 126

    $default  reduce using rule 55 (params)


State 106

   44 exp: exp . PLUS exp
   44    | exp PLUS exp .
   45    | exp . MINUS exp
   46    | exp . PROD exp
   47    | exp . DIV exp
   48    | exp . MOD exp

    PROD  shift, and go to state 76
    DIV   shift, and go to state 77
    MOD   shift, and go to state 78

    $default  reduce using rule 44 (exp)


State 107

   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   45    | exp MINUS exp .
   46    | exp . PROD exp
   47    | exp . DIV exp
   48    | exp . MOD exp

    PROD  shift, and go to state 76
    DIV   shift, and go to state 77
    MOD   shift, and go to state 78

    $default  reduce using rule 45 (exp)


State 108

   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . PROD exp
   46    | exp PROD exp .
   47    | exp . DIV exp
   48    | exp . MOD exp

    $default  reduce using rule 46 (exp)


State 109

   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . PROD exp
   47    | exp . DIV exp
   47    | exp DIV exp .
   48    | exp . MOD exp

    $default  reduce using rule 47 (exp)


State 110

   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . PROD exp
   47    | exp . DIV exp
   48    | exp . MOD exp
   48    | exp MOD exp .

    $default  reduce using rule 48 (exp)


State 111

   42 var_arr: ID LBRACKET exp RBRACKET .

    $default  reduce using rule 42 (var_arr)


State 112

   28 sent: FOR LPAR sent SEMICOLON . cond SEMICOLON sent RPAR sent

    TRUE      shift, and go to state 60
    FALSE     shift, and go to state 61
    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    NOT       shift, and go to state 62
    LPAR      shift, and go to state 63

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 64
    cond     go to state 127


State 113

   29 sent: parte_izq ASSIG exp SEMICOLON .

    $default  reduce using rule 29 (sent)


State 114

   43 var_arr: var_arr LBRACKET exp RBRACKET .

    $default  reduce using rule 43 (var_arr)


State 115

   22 arreglo: LBRACKET numero RBRACKET . arreglo

    LBRACKET  shift, and go to state 54

    $default  reduce using rule 23 (arreglo)

    arreglo  go to state 128


State 116

   14 lista: lista COMMA ID arreglo .

    $default  reduce using rule 14 (lista)


State 117

   64 cond: LPAR cond RPAR .

    $default  reduce using rule 64 (cond)


State 118

   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . PROD exp
   47    | exp . DIV exp
   48    | exp . MOD exp
   65 cond: exp rel exp .

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    PROD   shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 65 (cond)


State 119

   60 cond: cond OR $@5 . cond

    TRUE      shift, and go to state 60
    FALSE     shift, and go to state 61
    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    NOT       shift, and go to state 62
    LPAR      shift, and go to state 63

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 64
    cond     go to state 129


State 120

   62 cond: cond AND $@6 . cond

    TRUE      shift, and go to state 60
    FALSE     shift, and go to state 61
    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    NOT       shift, and go to state 62
    LPAR      shift, and go to state 63

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 64
    cond     go to state 130


State 121

   24 sent: IF LPAR cond RPAR sent .
   25     | IF LPAR cond RPAR sent . ELSE sent

    ELSE  shift, and go to state 131

    $default  reduce using rule 24 (sent)


State 122

   26 sent: WHILE LPAR cond RPAR sent .

    $default  reduce using rule 26 (sent)


State 123

   27 sent: DO sent WHILE LPAR cond . RPAR SEMICOLON
   60 cond: cond . OR $@5 cond
   62     | cond . AND $@6 cond

    OR    shift, and go to state 97
    AND   shift, and go to state 98
    RPAR  shift, and go to state 132


State 124

   33 sent: SWITCH LPAR exp RPAR LCURLYB . casos RCURLYB

    CASE     shift, and go to state 133
    DEFAULT  shift, and go to state 134

    $default  reduce using rule 38 (casos)

    casos  go to state 135


State 125

   54 exp: ID LPAR params RPAR .

    $default  reduce using rule 54 (exp)


State 126

   57 lista_param: lista_param COMMA . exp

    ID        shift, and go to state 38
    CADENA    shift, and go to state 39
    CARACTER  shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero   go to state 43
    signo    go to state 44
    var_arr  go to state 45
    exp      go to state 136


State 127

   28 sent: FOR LPAR sent SEMICOLON cond . SEMICOLON sent RPAR sent
   60 cond: cond . OR $@5 cond
   62     | cond . AND $@6 cond

    SEMICOLON  shift, and go to state 137
    OR         shift, and go to state 97
    AND        shift, and go to state 98


State 128

   22 arreglo: LBRACKET numero RBRACKET arreglo .

    $default  reduce using rule 22 (arreglo)


State 129

   60 cond: cond . OR $@5 cond
   60     | cond OR $@5 cond .
   62     | cond . AND $@6 cond

    AND  shift, and go to state 98

    $default  reduce using rule 60 (cond)


State 130

   60 cond: cond . OR $@5 cond
   62     | cond . AND $@6 cond
   62     | cond AND $@6 cond .

    $default  reduce using rule 62 (cond)


State 131

   25 sent: IF LPAR cond RPAR sent ELSE . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 138
    parte_izq  go to state 27
    var_arr    go to state 28


State 132

   27 sent: DO sent WHILE LPAR cond RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 139


State 133

   36 casos: CASE . numero sent casos

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42

    $default  reduce using rule 21 (signo)

    numero  go to state 140
    signo   go to state 44


State 134

   37 casos: DEFAULT . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 141
    parte_izq  go to state 27
    var_arr    go to state 28


State 135

   33 sent: SWITCH LPAR exp RPAR LCURLYB casos . RCURLYB

    RCURLYB  shift, and go to state 142


State 136

   44 exp: exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . PROD exp
   47    | exp . DIV exp
   48    | exp . MOD exp
   57 lista_param: lista_param COMMA exp .

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    PROD   shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 57 (lista_param)


State 137

   28 sent: FOR LPAR sent SEMICOLON cond SEMICOLON . sent RPAR sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 143
    parte_izq  go to state 27
    var_arr    go to state 28


State 138

   25 sent: IF LPAR cond RPAR sent ELSE sent .

    $default  reduce using rule 25 (sent)


State 139

   27 sent: DO sent WHILE LPAR cond RPAR SEMICOLON .

    $default  reduce using rule 27 (sent)


State 140

   36 casos: CASE numero . sent casos

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 144
    parte_izq  go to state 27
    var_arr    go to state 28


State 141

   37 casos: DEFAULT sent .

    $default  reduce using rule 37 (casos)


State 142

   33 sent: SWITCH LPAR exp RPAR LCURLYB casos RCURLYB .

    $default  reduce using rule 33 (sent)


State 143

   28 sent: FOR LPAR sent SEMICOLON cond SEMICOLON sent . RPAR sent

    RPAR  shift, and go to state 145


State 144

   36 casos: CASE numero sent . casos

    CASE     shift, and go to state 133
    DEFAULT  shift, and go to state 134

    $default  reduce using rule 38 (casos)

    casos  go to state 146


State 145

   28 sent: FOR LPAR sent SEMICOLON cond SEMICOLON sent RPAR . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 147
    parte_izq  go to state 27
    var_arr    go to state 28


State 146

   36 casos: CASE numero sent casos .

    $default  reduce using rule 36 (casos)


State 147

   28 sent: FOR LPAR sent SEMICOLON cond SEMICOLON sent RPAR sent .

    $default  reduce using rule 28 (sent)
