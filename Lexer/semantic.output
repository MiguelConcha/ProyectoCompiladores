Terminals unused in grammar

   END


Grammar

    0 $accept: prog $end

    1 $@1: %empty

    2 prog: $@1 decls funcs

    3 $@2: %empty

    4 decls: tipo $@2 lista SEMICOLON decls
    5      | %empty

    6 tipo: INTTYPE
    7     | FLOATTYPE
    8     | DOUBLETYPE
    9     | CHARTYPE
   10     | VOID

   11 $@3: %empty

   12 tipo: STRUCT LCURLYB $@3 decls RCURLYB

   13 lista: lista COMMA ID arreglo
   14      | ID arreglo

   15 numero: signo INT
   16       | signo DOUBLE
   17       | signo FLOAT

   18 signo: PLUS
   19      | MINUS
   20      | %empty

   21 arreglo: LBRACKET numero RBRACKET arreglo
   22        | %empty

   23 $@4: %empty

   24 $@5: %empty

   25 $@6: %empty

   26 funcs: FUNC tipo ID LPAR args RPAR $@4 LCURLYB decls sents $@5 RCURLYB $@6 funcs
   27      | %empty

   28 args: lista_args
   29     | %empty

   30 lista_args: lista_args COMMA tipo ID parte_arr
   31           | tipo ID parte_arr

   32 parte_arr: LBRACKET RBRACKET parte_arr
   33          | %empty

   34 $@7: %empty

   35 sents: sents $@7 sent
   36      | sent

   37 $@8: %empty

   38 $@9: %empty

   39 sent: IF LPAR cond RPAR $@8 sent $@9 sentp
   40     | WHILE LPAR cond RPAR sent
   41     | DO sent WHILE LPAR cond RPAR SEMICOLON
   42     | FOR LPAR assign SEMICOLON cond SEMICOLON assign RPAR sent
   43     | assign SEMICOLON
   44     | RETURN exp SEMICOLON
   45     | RETURN SEMICOLON
   46     | LCURLYB sents RCURLYB
   47     | SWITCH LPAR exp RPAR LCURLYB casos RCURLYB
   48     | BREAK SEMICOLON
   49     | PRINT exp SEMICOLON

   50 assign: parte_izq ASSIG exp

   51 sentp: %empty

   52 $@10: %empty

   53 sentp: ELSE $@10 sent

   54 casos: CASE numero sent casos
   55      | DEFAULT sent
   56      | %empty

   57 parte_izq: ID
   58          | var_arr
   59          | ID DOT ID

   60 var_arr: ID LBRACKET exp RBRACKET
   61        | var_arr LBRACKET exp RBRACKET

   62 exp: exp PLUS exp
   63    | exp MINUS exp
   64    | exp PROD exp
   65    | exp DIV exp
   66    | exp MOD exp
   67    | var_arr
   68    | ID
   69    | CADENA
   70    | numero
   71    | CARACTER
   72    | ID LPAR params RPAR

   73 params: lista_param
   74       | %empty

   75 lista_param: lista_param COMMA exp
   76            | exp

   77 $@11: %empty

   78 cond: cond OR $@11 cond

   79 $@12: %empty

   80 cond: cond AND $@12 cond
   81     | NOT cond
   82     | LPAR cond RPAR
   83     | exp rel exp
   84     | TRUE
   85     | FALSE

   86 rel: LT
   87    | GT
   88    | LEQ
   89    | GEQ
   90    | NEQ
   91    | EQ


Terminals, with rules where they appear

$end (0) 0
error (256)
END (258)
INTTYPE (259) 6
FLOATTYPE (260) 7
DOUBLETYPE (261) 8
CHARTYPE (262) 9
VOID (263) 10
FUNC (264) 26
STRUCT (265) 12
LCURLYB (266) 12 26 46 47
RCURLYB (267) 12 26 46 47
LBRACKET (268) 21 32 60 61
RBRACKET (269) 21 32 60 61
SEMICOLON (270) 4 41 42 43 44 45 48 49
DOT (271) 59
TRUE (272) 84
FALSE (273) 85
IF (274) 39
ELSE (275) 53
WHILE (276) 40 41
DO (277) 41
SWITCH (278) 47
CASE (279) 54
DEFAULT (280) 55
BREAK (281) 48
PRINT (282) 49
ID (283) 13 14 26 30 31 57 59 60 68 72
INT (284) 15
DOUBLE (285) 16
FLOAT (286) 17
CADENA (287) 69
CARACTER (288) 71
COMMA (289) 13 30 75
RETURN (290) 44 45
FOR (291) 42
ASSIG (292) 50
OR (293) 78
AND (294) 80
EQ (295) 91
NEQ (296) 90
GT (297) 87
GEQ (298) 89
LT (299) 86
LEQ (300) 88
PLUS (301) 18 62
MINUS (302) 19 63
PROD (303) 64
DIV (304) 65
MOD (305) 66
NOT (306) 81
LPAR (307) 26 39 40 41 42 47 72 82
RPAR (308) 26 39 40 41 42 47 72 82
IFX (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
prog (56)
    on left: 2, on right: 0
$@1 (57)
    on left: 1, on right: 2
decls (58)
    on left: 4 5, on right: 2 4 12 26
$@2 (59)
    on left: 3, on right: 4
tipo (60)
    on left: 6 7 8 9 10 12, on right: 4 26 30 31
$@3 (61)
    on left: 11, on right: 12
lista (62)
    on left: 13 14, on right: 4 13
numero (63)
    on left: 15 16 17, on right: 21 54 70
signo (64)
    on left: 18 19 20, on right: 15 16 17
arreglo (65)
    on left: 21 22, on right: 13 14 21
funcs (66)
    on left: 26 27, on right: 2 26
$@4 (67)
    on left: 23, on right: 26
$@5 (68)
    on left: 24, on right: 26
$@6 (69)
    on left: 25, on right: 26
args (70)
    on left: 28 29, on right: 26
lista_args (71)
    on left: 30 31, on right: 28 30
parte_arr (72)
    on left: 32 33, on right: 30 31 32
sents (73)
    on left: 35 36, on right: 26 35 46
$@7 (74)
    on left: 34, on right: 35
sent (75)
    on left: 39 40 41 42 43 44 45 46 47 48 49, on right: 35 36 39 40
    41 42 53 54 55
$@8 (76)
    on left: 37, on right: 39
$@9 (77)
    on left: 38, on right: 39
assign (78)
    on left: 50, on right: 42 43
sentp (79)
    on left: 51 53, on right: 39
$@10 (80)
    on left: 52, on right: 53
casos (81)
    on left: 54 55 56, on right: 47 54
parte_izq (82)
    on left: 57 58 59, on right: 50
var_arr (83)
    on left: 60 61, on right: 58 61 67
exp (84)
    on left: 62 63 64 65 66 67 68 69 70 71 72, on right: 44 47 49 50
    60 61 62 63 64 65 66 75 76 83
params (85)
    on left: 73 74, on right: 72
lista_param (86)
    on left: 75 76, on right: 73 75
cond (87)
    on left: 78 80 81 82 83 84 85, on right: 39 40 41 42 78 80 81 82
$@11 (88)
    on left: 77, on right: 78
$@12 (89)
    on left: 79, on right: 80
rel (90)
    on left: 86 87 88 89 90 91, on right: 83


State 0

    0 $accept: . prog $end

    $default  reduce using rule 1 ($@1)

    prog  go to state 1
    $@1   go to state 2


State 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


State 2

    2 prog: $@1 . decls funcs

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 5 (decls)

    decls  go to state 10
    tipo   go to state 11


State 3

    0 $accept: prog $end .

    $default  accept


State 4

    6 tipo: INTTYPE .

    $default  reduce using rule 6 (tipo)


State 5

    7 tipo: FLOATTYPE .

    $default  reduce using rule 7 (tipo)


State 6

    8 tipo: DOUBLETYPE .

    $default  reduce using rule 8 (tipo)


State 7

    9 tipo: CHARTYPE .

    $default  reduce using rule 9 (tipo)


State 8

   10 tipo: VOID .

    $default  reduce using rule 10 (tipo)


State 9

   12 tipo: STRUCT . LCURLYB $@3 decls RCURLYB

    LCURLYB  shift, and go to state 12


State 10

    2 prog: $@1 decls . funcs

    FUNC  shift, and go to state 13

    $default  reduce using rule 27 (funcs)

    funcs  go to state 14


State 11

    4 decls: tipo . $@2 lista SEMICOLON decls

    $default  reduce using rule 3 ($@2)

    $@2  go to state 15


State 12

   12 tipo: STRUCT LCURLYB . $@3 decls RCURLYB

    $default  reduce using rule 11 ($@3)

    $@3  go to state 16


State 13

   26 funcs: FUNC . tipo ID LPAR args RPAR $@4 LCURLYB decls sents $@5 RCURLYB $@6 funcs

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    tipo  go to state 17


State 14

    2 prog: $@1 decls funcs .

    $default  reduce using rule 2 (prog)


State 15

    4 decls: tipo $@2 . lista SEMICOLON decls

    ID  shift, and go to state 18

    lista  go to state 19


State 16

   12 tipo: STRUCT LCURLYB $@3 . decls RCURLYB

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 5 (decls)

    decls  go to state 20
    tipo   go to state 11


State 17

   26 funcs: FUNC tipo . ID LPAR args RPAR $@4 LCURLYB decls sents $@5 RCURLYB $@6 funcs

    ID  shift, and go to state 21


State 18

   14 lista: ID . arreglo

    LBRACKET  shift, and go to state 22

    $default  reduce using rule 22 (arreglo)

    arreglo  go to state 23


State 19

    4 decls: tipo $@2 lista . SEMICOLON decls
   13 lista: lista . COMMA ID arreglo

    SEMICOLON  shift, and go to state 24
    COMMA      shift, and go to state 25


State 20

   12 tipo: STRUCT LCURLYB $@3 decls . RCURLYB

    RCURLYB  shift, and go to state 26


State 21

   26 funcs: FUNC tipo ID . LPAR args RPAR $@4 LCURLYB decls sents $@5 RCURLYB $@6 funcs

    LPAR  shift, and go to state 27


State 22

   21 arreglo: LBRACKET . numero RBRACKET arreglo

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero  go to state 30
    signo   go to state 31


State 23

   14 lista: ID arreglo .

    $default  reduce using rule 14 (lista)


State 24

    4 decls: tipo $@2 lista SEMICOLON . decls

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 5 (decls)

    decls  go to state 32
    tipo   go to state 11


State 25

   13 lista: lista COMMA . ID arreglo

    ID  shift, and go to state 33


State 26

   12 tipo: STRUCT LCURLYB $@3 decls RCURLYB .

    $default  reduce using rule 12 (tipo)


State 27

   26 funcs: FUNC tipo ID LPAR . args RPAR $@4 LCURLYB decls sents $@5 RCURLYB $@6 funcs

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 29 (args)

    tipo        go to state 34
    args        go to state 35
    lista_args  go to state 36


State 28

   18 signo: PLUS .

    $default  reduce using rule 18 (signo)


State 29

   19 signo: MINUS .

    $default  reduce using rule 19 (signo)


State 30

   21 arreglo: LBRACKET numero . RBRACKET arreglo

    RBRACKET  shift, and go to state 37


State 31

   15 numero: signo . INT
   16       | signo . DOUBLE
   17       | signo . FLOAT

    INT     shift, and go to state 38
    DOUBLE  shift, and go to state 39
    FLOAT   shift, and go to state 40


State 32

    4 decls: tipo $@2 lista SEMICOLON decls .

    $default  reduce using rule 4 (decls)


State 33

   13 lista: lista COMMA ID . arreglo

    LBRACKET  shift, and go to state 22

    $default  reduce using rule 22 (arreglo)

    arreglo  go to state 41


State 34

   31 lista_args: tipo . ID parte_arr

    ID  shift, and go to state 42


State 35

   26 funcs: FUNC tipo ID LPAR args . RPAR $@4 LCURLYB decls sents $@5 RCURLYB $@6 funcs

    RPAR  shift, and go to state 43


State 36

   28 args: lista_args .
   30 lista_args: lista_args . COMMA tipo ID parte_arr

    COMMA  shift, and go to state 44

    $default  reduce using rule 28 (args)


State 37

   21 arreglo: LBRACKET numero RBRACKET . arreglo

    LBRACKET  shift, and go to state 22

    $default  reduce using rule 22 (arreglo)

    arreglo  go to state 45


State 38

   15 numero: signo INT .

    $default  reduce using rule 15 (numero)


State 39

   16 numero: signo DOUBLE .

    $default  reduce using rule 16 (numero)


State 40

   17 numero: signo FLOAT .

    $default  reduce using rule 17 (numero)


State 41

   13 lista: lista COMMA ID arreglo .

    $default  reduce using rule 13 (lista)


State 42

   31 lista_args: tipo ID . parte_arr

    LBRACKET  shift, and go to state 46

    $default  reduce using rule 33 (parte_arr)

    parte_arr  go to state 47


State 43

   26 funcs: FUNC tipo ID LPAR args RPAR . $@4 LCURLYB decls sents $@5 RCURLYB $@6 funcs

    $default  reduce using rule 23 ($@4)

    $@4  go to state 48


State 44

   30 lista_args: lista_args COMMA . tipo ID parte_arr

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    tipo  go to state 49


State 45

   21 arreglo: LBRACKET numero RBRACKET arreglo .

    $default  reduce using rule 21 (arreglo)


State 46

   32 parte_arr: LBRACKET . RBRACKET parte_arr

    RBRACKET  shift, and go to state 50


State 47

   31 lista_args: tipo ID parte_arr .

    $default  reduce using rule 31 (lista_args)


State 48

   26 funcs: FUNC tipo ID LPAR args RPAR $@4 . LCURLYB decls sents $@5 RCURLYB $@6 funcs

    LCURLYB  shift, and go to state 51


State 49

   30 lista_args: lista_args COMMA tipo . ID parte_arr

    ID  shift, and go to state 52


State 50

   32 parte_arr: LBRACKET RBRACKET . parte_arr

    LBRACKET  shift, and go to state 46

    $default  reduce using rule 33 (parte_arr)

    parte_arr  go to state 53


State 51

   26 funcs: FUNC tipo ID LPAR args RPAR $@4 LCURLYB . decls sents $@5 RCURLYB $@6 funcs

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 5 (decls)

    decls  go to state 54
    tipo   go to state 11


State 52

   30 lista_args: lista_args COMMA tipo ID . parte_arr

    LBRACKET  shift, and go to state 46

    $default  reduce using rule 33 (parte_arr)

    parte_arr  go to state 55


State 53

   32 parte_arr: LBRACKET RBRACKET parte_arr .

    $default  reduce using rule 32 (parte_arr)


State 54

   26 funcs: FUNC tipo ID LPAR args RPAR $@4 LCURLYB decls . sents $@5 RCURLYB $@6 funcs

    LCURLYB  shift, and go to state 56
    IF       shift, and go to state 57
    WHILE    shift, and go to state 58
    DO       shift, and go to state 59
    SWITCH   shift, and go to state 60
    BREAK    shift, and go to state 61
    PRINT    shift, and go to state 62
    ID       shift, and go to state 63
    RETURN   shift, and go to state 64
    FOR      shift, and go to state 65

    sents      go to state 66
    sent       go to state 67
    assign     go to state 68
    parte_izq  go to state 69
    var_arr    go to state 70


State 55

   30 lista_args: lista_args COMMA tipo ID parte_arr .

    $default  reduce using rule 30 (lista_args)


State 56

   46 sent: LCURLYB . sents RCURLYB

    LCURLYB  shift, and go to state 56
    IF       shift, and go to state 57
    WHILE    shift, and go to state 58
    DO       shift, and go to state 59
    SWITCH   shift, and go to state 60
    BREAK    shift, and go to state 61
    PRINT    shift, and go to state 62
    ID       shift, and go to state 63
    RETURN   shift, and go to state 64
    FOR      shift, and go to state 65

    sents      go to state 71
    sent       go to state 67
    assign     go to state 68
    parte_izq  go to state 69
    var_arr    go to state 70


State 57

   39 sent: IF . LPAR cond RPAR $@8 sent $@9 sentp

    LPAR  shift, and go to state 72


State 58

   40 sent: WHILE . LPAR cond RPAR sent

    LPAR  shift, and go to state 73


State 59

   41 sent: DO . sent WHILE LPAR cond RPAR SEMICOLON

    LCURLYB  shift, and go to state 56
    IF       shift, and go to state 57
    WHILE    shift, and go to state 58
    DO       shift, and go to state 59
    SWITCH   shift, and go to state 60
    BREAK    shift, and go to state 61
    PRINT    shift, and go to state 62
    ID       shift, and go to state 63
    RETURN   shift, and go to state 64
    FOR      shift, and go to state 65

    sent       go to state 74
    assign     go to state 68
    parte_izq  go to state 69
    var_arr    go to state 70


State 60

   47 sent: SWITCH . LPAR exp RPAR LCURLYB casos RCURLYB

    LPAR  shift, and go to state 75


State 61

   48 sent: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 76


State 62

   49 sent: PRINT . exp SEMICOLON

    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 82


State 63

   57 parte_izq: ID .
   59          | ID . DOT ID
   60 var_arr: ID . LBRACKET exp RBRACKET

    LBRACKET  shift, and go to state 83
    DOT       shift, and go to state 84

    $default  reduce using rule 57 (parte_izq)


State 64

   44 sent: RETURN . exp SEMICOLON
   45     | RETURN . SEMICOLON

    SEMICOLON  shift, and go to state 85
    ID         shift, and go to state 77
    CADENA     shift, and go to state 78
    CARACTER   shift, and go to state 79
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 86


State 65

   42 sent: FOR . LPAR assign SEMICOLON cond SEMICOLON assign RPAR sent

    LPAR  shift, and go to state 87


State 66

   26 funcs: FUNC tipo ID LPAR args RPAR $@4 LCURLYB decls sents . $@5 RCURLYB $@6 funcs
   35 sents: sents . $@7 sent

    RCURLYB   reduce using rule 24 ($@5)
    $default  reduce using rule 34 ($@7)

    $@5  go to state 88
    $@7  go to state 89


State 67

   36 sents: sent .

    $default  reduce using rule 36 (sents)


State 68

   43 sent: assign . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 69

   50 assign: parte_izq . ASSIG exp

    ASSIG  shift, and go to state 91


State 70

   58 parte_izq: var_arr .
   61 var_arr: var_arr . LBRACKET exp RBRACKET

    LBRACKET  shift, and go to state 92

    $default  reduce using rule 58 (parte_izq)


State 71

   35 sents: sents . $@7 sent
   46 sent: LCURLYB sents . RCURLYB

    RCURLYB  shift, and go to state 93

    $default  reduce using rule 34 ($@7)

    $@7  go to state 89


State 72

   39 sent: IF LPAR . cond RPAR $@8 sent $@9 sentp

    TRUE      shift, and go to state 94
    FALSE     shift, and go to state 95
    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29
    NOT       shift, and go to state 96
    LPAR      shift, and go to state 97

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 98
    cond     go to state 99


State 73

   40 sent: WHILE LPAR . cond RPAR sent

    TRUE      shift, and go to state 94
    FALSE     shift, and go to state 95
    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29
    NOT       shift, and go to state 96
    LPAR      shift, and go to state 97

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 98
    cond     go to state 100


State 74

   41 sent: DO sent . WHILE LPAR cond RPAR SEMICOLON

    WHILE  shift, and go to state 101


State 75

   47 sent: SWITCH LPAR . exp RPAR LCURLYB casos RCURLYB

    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 102


State 76

   48 sent: BREAK SEMICOLON .

    $default  reduce using rule 48 (sent)


State 77

   60 var_arr: ID . LBRACKET exp RBRACKET
   68 exp: ID .
   72    | ID . LPAR params RPAR

    LBRACKET  shift, and go to state 83
    LPAR      shift, and go to state 103

    $default  reduce using rule 68 (exp)


State 78

   69 exp: CADENA .

    $default  reduce using rule 69 (exp)


State 79

   71 exp: CARACTER .

    $default  reduce using rule 71 (exp)


State 80

   70 exp: numero .

    $default  reduce using rule 70 (exp)


State 81

   61 var_arr: var_arr . LBRACKET exp RBRACKET
   67 exp: var_arr .

    LBRACKET  shift, and go to state 92

    $default  reduce using rule 67 (exp)


State 82

   49 sent: PRINT exp . SEMICOLON
   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   64    | exp . PROD exp
   65    | exp . DIV exp
   66    | exp . MOD exp

    SEMICOLON  shift, and go to state 104
    PLUS       shift, and go to state 105
    MINUS      shift, and go to state 106
    PROD       shift, and go to state 107
    DIV        shift, and go to state 108
    MOD        shift, and go to state 109


State 83

   60 var_arr: ID LBRACKET . exp RBRACKET

    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 110


State 84

   59 parte_izq: ID DOT . ID

    ID  shift, and go to state 111


State 85

   45 sent: RETURN SEMICOLON .

    $default  reduce using rule 45 (sent)


State 86

   44 sent: RETURN exp . SEMICOLON
   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   64    | exp . PROD exp
   65    | exp . DIV exp
   66    | exp . MOD exp

    SEMICOLON  shift, and go to state 112
    PLUS       shift, and go to state 105
    MINUS      shift, and go to state 106
    PROD       shift, and go to state 107
    DIV        shift, and go to state 108
    MOD        shift, and go to state 109


State 87

   42 sent: FOR LPAR . assign SEMICOLON cond SEMICOLON assign RPAR sent

    ID  shift, and go to state 63

    assign     go to state 113
    parte_izq  go to state 69
    var_arr    go to state 70


State 88

   26 funcs: FUNC tipo ID LPAR args RPAR $@4 LCURLYB decls sents $@5 . RCURLYB $@6 funcs

    RCURLYB  shift, and go to state 114


State 89

   35 sents: sents $@7 . sent

    LCURLYB  shift, and go to state 56
    IF       shift, and go to state 57
    WHILE    shift, and go to state 58
    DO       shift, and go to state 59
    SWITCH   shift, and go to state 60
    BREAK    shift, and go to state 61
    PRINT    shift, and go to state 62
    ID       shift, and go to state 63
    RETURN   shift, and go to state 64
    FOR      shift, and go to state 65

    sent       go to state 115
    assign     go to state 68
    parte_izq  go to state 69
    var_arr    go to state 70


State 90

   43 sent: assign SEMICOLON .

    $default  reduce using rule 43 (sent)


State 91

   50 assign: parte_izq ASSIG . exp

    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 116


State 92

   61 var_arr: var_arr LBRACKET . exp RBRACKET

    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 117


State 93

   46 sent: LCURLYB sents RCURLYB .

    $default  reduce using rule 46 (sent)


State 94

   84 cond: TRUE .

    $default  reduce using rule 84 (cond)


State 95

   85 cond: FALSE .

    $default  reduce using rule 85 (cond)


State 96

   81 cond: NOT . cond

    TRUE      shift, and go to state 94
    FALSE     shift, and go to state 95
    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29
    NOT       shift, and go to state 96
    LPAR      shift, and go to state 97

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 98
    cond     go to state 118


State 97

   82 cond: LPAR . cond RPAR

    TRUE      shift, and go to state 94
    FALSE     shift, and go to state 95
    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29
    NOT       shift, and go to state 96
    LPAR      shift, and go to state 97

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 98
    cond     go to state 119


State 98

   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   64    | exp . PROD exp
   65    | exp . DIV exp
   66    | exp . MOD exp
   83 cond: exp . rel exp

    EQ     shift, and go to state 120
    NEQ    shift, and go to state 121
    GT     shift, and go to state 122
    GEQ    shift, and go to state 123
    LT     shift, and go to state 124
    LEQ    shift, and go to state 125
    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    PROD   shift, and go to state 107
    DIV    shift, and go to state 108
    MOD    shift, and go to state 109

    rel  go to state 126


State 99

   39 sent: IF LPAR cond . RPAR $@8 sent $@9 sentp
   78 cond: cond . OR $@11 cond
   80     | cond . AND $@12 cond

    OR    shift, and go to state 127
    AND   shift, and go to state 128
    RPAR  shift, and go to state 129


State 100

   40 sent: WHILE LPAR cond . RPAR sent
   78 cond: cond . OR $@11 cond
   80     | cond . AND $@12 cond

    OR    shift, and go to state 127
    AND   shift, and go to state 128
    RPAR  shift, and go to state 130


State 101

   41 sent: DO sent WHILE . LPAR cond RPAR SEMICOLON

    LPAR  shift, and go to state 131


State 102

   47 sent: SWITCH LPAR exp . RPAR LCURLYB casos RCURLYB
   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   64    | exp . PROD exp
   65    | exp . DIV exp
   66    | exp . MOD exp

    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    PROD   shift, and go to state 107
    DIV    shift, and go to state 108
    MOD    shift, and go to state 109
    RPAR   shift, and go to state 132


State 103

   72 exp: ID LPAR . params RPAR

    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29

    RPAR      reduce using rule 74 (params)
    $default  reduce using rule 20 (signo)

    numero       go to state 80
    signo        go to state 31
    var_arr      go to state 81
    exp          go to state 133
    params       go to state 134
    lista_param  go to state 135


State 104

   49 sent: PRINT exp SEMICOLON .

    $default  reduce using rule 49 (sent)


State 105

   62 exp: exp PLUS . exp

    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 136


State 106

   63 exp: exp MINUS . exp

    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 137


State 107

   64 exp: exp PROD . exp

    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 138


State 108

   65 exp: exp DIV . exp

    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 139


State 109

   66 exp: exp MOD . exp

    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 140


State 110

   60 var_arr: ID LBRACKET exp . RBRACKET
   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   64    | exp . PROD exp
   65    | exp . DIV exp
   66    | exp . MOD exp

    RBRACKET  shift, and go to state 141
    PLUS      shift, and go to state 105
    MINUS     shift, and go to state 106
    PROD      shift, and go to state 107
    DIV       shift, and go to state 108
    MOD       shift, and go to state 109


State 111

   59 parte_izq: ID DOT ID .

    $default  reduce using rule 59 (parte_izq)


State 112

   44 sent: RETURN exp SEMICOLON .

    $default  reduce using rule 44 (sent)


State 113

   42 sent: FOR LPAR assign . SEMICOLON cond SEMICOLON assign RPAR sent

    SEMICOLON  shift, and go to state 142


State 114

   26 funcs: FUNC tipo ID LPAR args RPAR $@4 LCURLYB decls sents $@5 RCURLYB . $@6 funcs

    $default  reduce using rule 25 ($@6)

    $@6  go to state 143


State 115

   35 sents: sents $@7 sent .

    $default  reduce using rule 35 (sents)


State 116

   50 assign: parte_izq ASSIG exp .
   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   64    | exp . PROD exp
   65    | exp . DIV exp
   66    | exp . MOD exp

    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    PROD   shift, and go to state 107
    DIV    shift, and go to state 108
    MOD    shift, and go to state 109

    $default  reduce using rule 50 (assign)


State 117

   61 var_arr: var_arr LBRACKET exp . RBRACKET
   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   64    | exp . PROD exp
   65    | exp . DIV exp
   66    | exp . MOD exp

    RBRACKET  shift, and go to state 144
    PLUS      shift, and go to state 105
    MINUS     shift, and go to state 106
    PROD      shift, and go to state 107
    DIV       shift, and go to state 108
    MOD       shift, and go to state 109


State 118

   78 cond: cond . OR $@11 cond
   80     | cond . AND $@12 cond
   81     | NOT cond .

    $default  reduce using rule 81 (cond)


State 119

   78 cond: cond . OR $@11 cond
   80     | cond . AND $@12 cond
   82     | LPAR cond . RPAR

    OR    shift, and go to state 127
    AND   shift, and go to state 128
    RPAR  shift, and go to state 145


State 120

   91 rel: EQ .

    $default  reduce using rule 91 (rel)


State 121

   90 rel: NEQ .

    $default  reduce using rule 90 (rel)


State 122

   87 rel: GT .

    $default  reduce using rule 87 (rel)


State 123

   89 rel: GEQ .

    $default  reduce using rule 89 (rel)


State 124

   86 rel: LT .

    $default  reduce using rule 86 (rel)


State 125

   88 rel: LEQ .

    $default  reduce using rule 88 (rel)


State 126

   83 cond: exp rel . exp

    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 146


State 127

   78 cond: cond OR . $@11 cond

    $default  reduce using rule 77 ($@11)

    $@11  go to state 147


State 128

   80 cond: cond AND . $@12 cond

    $default  reduce using rule 79 ($@12)

    $@12  go to state 148


State 129

   39 sent: IF LPAR cond RPAR . $@8 sent $@9 sentp

    $default  reduce using rule 37 ($@8)

    $@8  go to state 149


State 130

   40 sent: WHILE LPAR cond RPAR . sent

    LCURLYB  shift, and go to state 56
    IF       shift, and go to state 57
    WHILE    shift, and go to state 58
    DO       shift, and go to state 59
    SWITCH   shift, and go to state 60
    BREAK    shift, and go to state 61
    PRINT    shift, and go to state 62
    ID       shift, and go to state 63
    RETURN   shift, and go to state 64
    FOR      shift, and go to state 65

    sent       go to state 150
    assign     go to state 68
    parte_izq  go to state 69
    var_arr    go to state 70


State 131

   41 sent: DO sent WHILE LPAR . cond RPAR SEMICOLON

    TRUE      shift, and go to state 94
    FALSE     shift, and go to state 95
    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29
    NOT       shift, and go to state 96
    LPAR      shift, and go to state 97

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 98
    cond     go to state 151


State 132

   47 sent: SWITCH LPAR exp RPAR . LCURLYB casos RCURLYB

    LCURLYB  shift, and go to state 152


State 133

   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   64    | exp . PROD exp
   65    | exp . DIV exp
   66    | exp . MOD exp
   76 lista_param: exp .

    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    PROD   shift, and go to state 107
    DIV    shift, and go to state 108
    MOD    shift, and go to state 109

    $default  reduce using rule 76 (lista_param)


State 134

   72 exp: ID LPAR params . RPAR

    RPAR  shift, and go to state 153


State 135

   73 params: lista_param .
   75 lista_param: lista_param . COMMA exp

    COMMA  shift, and go to state 154

    $default  reduce using rule 73 (params)


State 136

   62 exp: exp . PLUS exp
   62    | exp PLUS exp .
   63    | exp . MINUS exp
   64    | exp . PROD exp
   65    | exp . DIV exp
   66    | exp . MOD exp

    PROD  shift, and go to state 107
    DIV   shift, and go to state 108
    MOD   shift, and go to state 109

    $default  reduce using rule 62 (exp)


State 137

   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   63    | exp MINUS exp .
   64    | exp . PROD exp
   65    | exp . DIV exp
   66    | exp . MOD exp

    PROD  shift, and go to state 107
    DIV   shift, and go to state 108
    MOD   shift, and go to state 109

    $default  reduce using rule 63 (exp)


State 138

   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   64    | exp . PROD exp
   64    | exp PROD exp .
   65    | exp . DIV exp
   66    | exp . MOD exp

    $default  reduce using rule 64 (exp)


State 139

   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   64    | exp . PROD exp
   65    | exp . DIV exp
   65    | exp DIV exp .
   66    | exp . MOD exp

    $default  reduce using rule 65 (exp)


State 140

   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   64    | exp . PROD exp
   65    | exp . DIV exp
   66    | exp . MOD exp
   66    | exp MOD exp .

    $default  reduce using rule 66 (exp)


State 141

   60 var_arr: ID LBRACKET exp RBRACKET .

    $default  reduce using rule 60 (var_arr)


State 142

   42 sent: FOR LPAR assign SEMICOLON . cond SEMICOLON assign RPAR sent

    TRUE      shift, and go to state 94
    FALSE     shift, and go to state 95
    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29
    NOT       shift, and go to state 96
    LPAR      shift, and go to state 97

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 98
    cond     go to state 155


State 143

   26 funcs: FUNC tipo ID LPAR args RPAR $@4 LCURLYB decls sents $@5 RCURLYB $@6 . funcs

    FUNC  shift, and go to state 13

    $default  reduce using rule 27 (funcs)

    funcs  go to state 156


State 144

   61 var_arr: var_arr LBRACKET exp RBRACKET .

    $default  reduce using rule 61 (var_arr)


State 145

   82 cond: LPAR cond RPAR .

    $default  reduce using rule 82 (cond)


State 146

   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   64    | exp . PROD exp
   65    | exp . DIV exp
   66    | exp . MOD exp
   83 cond: exp rel exp .

    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    PROD   shift, and go to state 107
    DIV    shift, and go to state 108
    MOD    shift, and go to state 109

    $default  reduce using rule 83 (cond)


State 147

   78 cond: cond OR $@11 . cond

    TRUE      shift, and go to state 94
    FALSE     shift, and go to state 95
    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29
    NOT       shift, and go to state 96
    LPAR      shift, and go to state 97

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 98
    cond     go to state 157


State 148

   80 cond: cond AND $@12 . cond

    TRUE      shift, and go to state 94
    FALSE     shift, and go to state 95
    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29
    NOT       shift, and go to state 96
    LPAR      shift, and go to state 97

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 98
    cond     go to state 158


State 149

   39 sent: IF LPAR cond RPAR $@8 . sent $@9 sentp

    LCURLYB  shift, and go to state 56
    IF       shift, and go to state 57
    WHILE    shift, and go to state 58
    DO       shift, and go to state 59
    SWITCH   shift, and go to state 60
    BREAK    shift, and go to state 61
    PRINT    shift, and go to state 62
    ID       shift, and go to state 63
    RETURN   shift, and go to state 64
    FOR      shift, and go to state 65

    sent       go to state 159
    assign     go to state 68
    parte_izq  go to state 69
    var_arr    go to state 70


State 150

   40 sent: WHILE LPAR cond RPAR sent .

    $default  reduce using rule 40 (sent)


State 151

   41 sent: DO sent WHILE LPAR cond . RPAR SEMICOLON
   78 cond: cond . OR $@11 cond
   80     | cond . AND $@12 cond

    OR    shift, and go to state 127
    AND   shift, and go to state 128
    RPAR  shift, and go to state 160


State 152

   47 sent: SWITCH LPAR exp RPAR LCURLYB . casos RCURLYB

    CASE     shift, and go to state 161
    DEFAULT  shift, and go to state 162

    $default  reduce using rule 56 (casos)

    casos  go to state 163


State 153

   72 exp: ID LPAR params RPAR .

    $default  reduce using rule 72 (exp)


State 154

   75 lista_param: lista_param COMMA . exp

    ID        shift, and go to state 77
    CADENA    shift, and go to state 78
    CARACTER  shift, and go to state 79
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero   go to state 80
    signo    go to state 31
    var_arr  go to state 81
    exp      go to state 164


State 155

   42 sent: FOR LPAR assign SEMICOLON cond . SEMICOLON assign RPAR sent
   78 cond: cond . OR $@11 cond
   80     | cond . AND $@12 cond

    SEMICOLON  shift, and go to state 165
    OR         shift, and go to state 127
    AND        shift, and go to state 128


State 156

   26 funcs: FUNC tipo ID LPAR args RPAR $@4 LCURLYB decls sents $@5 RCURLYB $@6 funcs .

    $default  reduce using rule 26 (funcs)


State 157

   78 cond: cond . OR $@11 cond
   78     | cond OR $@11 cond .
   80     | cond . AND $@12 cond

    AND  shift, and go to state 128

    $default  reduce using rule 78 (cond)


State 158

   78 cond: cond . OR $@11 cond
   80     | cond . AND $@12 cond
   80     | cond AND $@12 cond .

    $default  reduce using rule 80 (cond)


State 159

   39 sent: IF LPAR cond RPAR $@8 sent . $@9 sentp

    $default  reduce using rule 38 ($@9)

    $@9  go to state 166


State 160

   41 sent: DO sent WHILE LPAR cond RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 167


State 161

   54 casos: CASE . numero sent casos

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29

    $default  reduce using rule 20 (signo)

    numero  go to state 168
    signo   go to state 31


State 162

   55 casos: DEFAULT . sent

    LCURLYB  shift, and go to state 56
    IF       shift, and go to state 57
    WHILE    shift, and go to state 58
    DO       shift, and go to state 59
    SWITCH   shift, and go to state 60
    BREAK    shift, and go to state 61
    PRINT    shift, and go to state 62
    ID       shift, and go to state 63
    RETURN   shift, and go to state 64
    FOR      shift, and go to state 65

    sent       go to state 169
    assign     go to state 68
    parte_izq  go to state 69
    var_arr    go to state 70


State 163

   47 sent: SWITCH LPAR exp RPAR LCURLYB casos . RCURLYB

    RCURLYB  shift, and go to state 170


State 164

   62 exp: exp . PLUS exp
   63    | exp . MINUS exp
   64    | exp . PROD exp
   65    | exp . DIV exp
   66    | exp . MOD exp
   75 lista_param: lista_param COMMA exp .

    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    PROD   shift, and go to state 107
    DIV    shift, and go to state 108
    MOD    shift, and go to state 109

    $default  reduce using rule 75 (lista_param)


State 165

   42 sent: FOR LPAR assign SEMICOLON cond SEMICOLON . assign RPAR sent

    ID  shift, and go to state 63

    assign     go to state 171
    parte_izq  go to state 69
    var_arr    go to state 70


State 166

   39 sent: IF LPAR cond RPAR $@8 sent $@9 . sentp

    ELSE  shift, and go to state 172

    $default  reduce using rule 51 (sentp)

    sentp  go to state 173


State 167

   41 sent: DO sent WHILE LPAR cond RPAR SEMICOLON .

    $default  reduce using rule 41 (sent)


State 168

   54 casos: CASE numero . sent casos

    LCURLYB  shift, and go to state 56
    IF       shift, and go to state 57
    WHILE    shift, and go to state 58
    DO       shift, and go to state 59
    SWITCH   shift, and go to state 60
    BREAK    shift, and go to state 61
    PRINT    shift, and go to state 62
    ID       shift, and go to state 63
    RETURN   shift, and go to state 64
    FOR      shift, and go to state 65

    sent       go to state 174
    assign     go to state 68
    parte_izq  go to state 69
    var_arr    go to state 70


State 169

   55 casos: DEFAULT sent .

    $default  reduce using rule 55 (casos)


State 170

   47 sent: SWITCH LPAR exp RPAR LCURLYB casos RCURLYB .

    $default  reduce using rule 47 (sent)


State 171

   42 sent: FOR LPAR assign SEMICOLON cond SEMICOLON assign . RPAR sent

    RPAR  shift, and go to state 175


State 172

   53 sentp: ELSE . $@10 sent

    $default  reduce using rule 52 ($@10)

    $@10  go to state 176


State 173

   39 sent: IF LPAR cond RPAR $@8 sent $@9 sentp .

    $default  reduce using rule 39 (sent)


State 174

   54 casos: CASE numero sent . casos

    CASE     shift, and go to state 161
    DEFAULT  shift, and go to state 162

    $default  reduce using rule 56 (casos)

    casos  go to state 177


State 175

   42 sent: FOR LPAR assign SEMICOLON cond SEMICOLON assign RPAR . sent

    LCURLYB  shift, and go to state 56
    IF       shift, and go to state 57
    WHILE    shift, and go to state 58
    DO       shift, and go to state 59
    SWITCH   shift, and go to state 60
    BREAK    shift, and go to state 61
    PRINT    shift, and go to state 62
    ID       shift, and go to state 63
    RETURN   shift, and go to state 64
    FOR      shift, and go to state 65

    sent       go to state 178
    assign     go to state 68
    parte_izq  go to state 69
    var_arr    go to state 70


State 176

   53 sentp: ELSE $@10 . sent

    LCURLYB  shift, and go to state 56
    IF       shift, and go to state 57
    WHILE    shift, and go to state 58
    DO       shift, and go to state 59
    SWITCH   shift, and go to state 60
    BREAK    shift, and go to state 61
    PRINT    shift, and go to state 62
    ID       shift, and go to state 63
    RETURN   shift, and go to state 64
    FOR      shift, and go to state 65

    sent       go to state 179
    assign     go to state 68
    parte_izq  go to state 69
    var_arr    go to state 70


State 177

   54 casos: CASE numero sent casos .

    $default  reduce using rule 54 (casos)


State 178

   42 sent: FOR LPAR assign SEMICOLON cond SEMICOLON assign RPAR sent .

    $default  reduce using rule 42 (sent)


State 179

   53 sentp: ELSE $@10 sent .

    $default  reduce using rule 53 (sentp)
