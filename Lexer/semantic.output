Nonterminals useless in grammar

   funcs
   args
   lista_args
   parte_arr


Terminals unused in grammar

   END
   FUNC


Rules useless in grammar

   83 funcs: FUNC tipo ID LPAR args RPAR LCURLYB decls sents RCURLYB funcs
   84      | %empty

   85 args: lista_args
   86     | %empty

   87 lista_args: lista_args COMMA tipo ID parte_arr
   88           | tipo ID parte_arr

   89 parte_arr: LBRACKET RBRACKET parte_arr
   90          | %empty


Grammar

    0 $accept: prog $end

    1 $@1: %empty

    2 $@2: %empty

    3 $@3: %empty

    4 prog: $@1 decls $@2 sent $@3

    5 $@4: %empty

    6 decls: tipo $@4 lista SEMICOLON decls
    7      | %empty

    8 tipo: INTTYPE
    9     | FLOATTYPE
   10     | DOUBLETYPE
   11     | CHARTYPE
   12     | VOID

   13 $@5: %empty

   14 tipo: STRUCT LCURLYB $@5 decls RCURLYB

   15 lista: lista COMMA ID arreglo
   16      | ID arreglo

   17 numero: signo INT
   18       | signo DOUBLE
   19       | signo FLOAT

   20 signo: PLUS
   21      | MINUS
   22      | %empty

   23 arreglo: LBRACKET numero RBRACKET arreglo
   24        | %empty

   25 $@6: %empty

   26 sents: sents $@6 sent
   27      | sent

   28 $@7: %empty

   29 $@8: %empty

   30 sent: IF LPAR cond RPAR $@7 sent $@8 sentp
   31     | WHILE LPAR cond RPAR sent
   32     | DO sent WHILE LPAR cond RPAR SEMICOLON
   33     | FOR LPAR assign SEMICOLON cond SEMICOLON assign RPAR sent
   34     | assign SEMICOLON
   35     | RETURN exp SEMICOLON
   36     | RETURN SEMICOLON
   37     | LCURLYB sents RCURLYB
   38     | SWITCH LPAR exp RPAR LCURLYB casos RCURLYB
   39     | BREAK SEMICOLON
   40     | PRINT exp SEMICOLON

   41 assign: parte_izq ASSIG exp

   42 sentp: %empty

   43 $@9: %empty

   44 sentp: ELSE $@9 sent

   45 casos: CASE numero sent casos
   46      | DEFAULT sent
   47      | %empty

   48 parte_izq: ID
   49          | var_arr
   50          | ID DOT ID

   51 var_arr: ID LBRACKET exp RBRACKET
   52        | var_arr LBRACKET exp RBRACKET

   53 exp: exp PLUS exp
   54    | exp MINUS exp
   55    | exp PROD exp
   56    | exp DIV exp
   57    | exp MOD exp
   58    | var_arr
   59    | ID
   60    | CADENA
   61    | numero
   62    | CARACTER
   63    | ID LPAR params RPAR

   64 params: lista_param
   65       | %empty

   66 lista_param: lista_param COMMA exp
   67            | exp

   68 $@10: %empty

   69 cond: cond OR $@10 cond

   70 $@11: %empty

   71 cond: cond AND $@11 cond
   72     | NOT cond
   73     | LPAR cond RPAR
   74     | exp rel exp
   75     | TRUE
   76     | FALSE

   77 rel: LT
   78    | GT
   79    | LEQ
   80    | GEQ
   81    | NEQ
   82    | EQ


Terminals, with rules where they appear

$end (0) 0
error (256)
END (258)
INTTYPE (259) 8
FLOATTYPE (260) 9
DOUBLETYPE (261) 10
CHARTYPE (262) 11
VOID (263) 12
FUNC (264)
STRUCT (265) 14
LCURLYB (266) 14 37 38
RCURLYB (267) 14 37 38
LBRACKET (268) 23 51 52
RBRACKET (269) 23 51 52
SEMICOLON (270) 6 32 33 34 35 36 39 40
DOT (271) 50
TRUE (272) 75
FALSE (273) 76
IF (274) 30
ELSE (275) 44
WHILE (276) 31 32
DO (277) 32
SWITCH (278) 38
CASE (279) 45
DEFAULT (280) 46
BREAK (281) 39
PRINT (282) 40
ID (283) 15 16 48 50 51 59 63
INT (284) 17
DOUBLE (285) 18
FLOAT (286) 19
CADENA (287) 60
CARACTER (288) 62
COMMA (289) 15 66
RETURN (290) 35 36
FOR (291) 33
ASSIG (292) 41
OR (293) 69
AND (294) 71
EQ (295) 82
NEQ (296) 81
GT (297) 78
GEQ (298) 80
LT (299) 77
LEQ (300) 79
PLUS (301) 20 53
MINUS (302) 21 54
PROD (303) 55
DIV (304) 56
MOD (305) 57
NOT (306) 72
LPAR (307) 30 31 32 33 38 63 73
RPAR (308) 30 31 32 33 38 63 73
IFX (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
prog (56)
    on left: 4, on right: 0
$@1 (57)
    on left: 1, on right: 4
$@2 (58)
    on left: 2, on right: 4
$@3 (59)
    on left: 3, on right: 4
decls (60)
    on left: 6 7, on right: 4 6 14
$@4 (61)
    on left: 5, on right: 6
tipo (62)
    on left: 8 9 10 11 12 14, on right: 6
$@5 (63)
    on left: 13, on right: 14
lista (64)
    on left: 15 16, on right: 6 15
numero (65)
    on left: 17 18 19, on right: 23 45 61
signo (66)
    on left: 20 21 22, on right: 17 18 19
arreglo (67)
    on left: 23 24, on right: 15 16 23
sents (68)
    on left: 26 27, on right: 26 37
$@6 (69)
    on left: 25, on right: 26
sent (70)
    on left: 30 31 32 33 34 35 36 37 38 39 40, on right: 4 26 27 30
    31 32 33 44 45 46
$@7 (71)
    on left: 28, on right: 30
$@8 (72)
    on left: 29, on right: 30
assign (73)
    on left: 41, on right: 33 34
sentp (74)
    on left: 42 44, on right: 30
$@9 (75)
    on left: 43, on right: 44
casos (76)
    on left: 45 46 47, on right: 38 45
parte_izq (77)
    on left: 48 49 50, on right: 41
var_arr (78)
    on left: 51 52, on right: 49 52 58
exp (79)
    on left: 53 54 55 56 57 58 59 60 61 62 63, on right: 35 38 40 41
    51 52 53 54 55 56 57 66 67 74
params (80)
    on left: 64 65, on right: 63
lista_param (81)
    on left: 66 67, on right: 64 66
cond (82)
    on left: 69 71 72 73 74 75 76, on right: 30 31 32 33 69 71 72 73
$@10 (83)
    on left: 68, on right: 69
$@11 (84)
    on left: 70, on right: 71
rel (85)
    on left: 77 78 79 80 81 82, on right: 74


State 0

    0 $accept: . prog $end

    $default  reduce using rule 1 ($@1)

    prog  go to state 1
    $@1   go to state 2


State 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


State 2

    4 prog: $@1 . decls $@2 sent $@3

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 7 (decls)

    decls  go to state 10
    tipo   go to state 11


State 3

    0 $accept: prog $end .

    $default  accept


State 4

    8 tipo: INTTYPE .

    $default  reduce using rule 8 (tipo)


State 5

    9 tipo: FLOATTYPE .

    $default  reduce using rule 9 (tipo)


State 6

   10 tipo: DOUBLETYPE .

    $default  reduce using rule 10 (tipo)


State 7

   11 tipo: CHARTYPE .

    $default  reduce using rule 11 (tipo)


State 8

   12 tipo: VOID .

    $default  reduce using rule 12 (tipo)


State 9

   14 tipo: STRUCT . LCURLYB $@5 decls RCURLYB

    LCURLYB  shift, and go to state 12


State 10

    4 prog: $@1 decls . $@2 sent $@3

    $default  reduce using rule 2 ($@2)

    $@2  go to state 13


State 11

    6 decls: tipo . $@4 lista SEMICOLON decls

    $default  reduce using rule 5 ($@4)

    $@4  go to state 14


State 12

   14 tipo: STRUCT LCURLYB . $@5 decls RCURLYB

    $default  reduce using rule 13 ($@5)

    $@5  go to state 15


State 13

    4 prog: $@1 decls $@2 . sent $@3

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 26
    assign     go to state 27
    parte_izq  go to state 28
    var_arr    go to state 29


State 14

    6 decls: tipo $@4 . lista SEMICOLON decls

    ID  shift, and go to state 30

    lista  go to state 31


State 15

   14 tipo: STRUCT LCURLYB $@5 . decls RCURLYB

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 7 (decls)

    decls  go to state 32
    tipo   go to state 11


State 16

   37 sent: LCURLYB . sents RCURLYB

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sents      go to state 33
    sent       go to state 34
    assign     go to state 27
    parte_izq  go to state 28
    var_arr    go to state 29


State 17

   30 sent: IF . LPAR cond RPAR $@7 sent $@8 sentp

    LPAR  shift, and go to state 35


State 18

   31 sent: WHILE . LPAR cond RPAR sent

    LPAR  shift, and go to state 36


State 19

   32 sent: DO . sent WHILE LPAR cond RPAR SEMICOLON

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 37
    assign     go to state 27
    parte_izq  go to state 28
    var_arr    go to state 29


State 20

   38 sent: SWITCH . LPAR exp RPAR LCURLYB casos RCURLYB

    LPAR  shift, and go to state 38


State 21

   39 sent: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 39


State 22

   40 sent: PRINT . exp SEMICOLON

    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 48


State 23

   48 parte_izq: ID .
   50          | ID . DOT ID
   51 var_arr: ID . LBRACKET exp RBRACKET

    LBRACKET  shift, and go to state 49
    DOT       shift, and go to state 50

    $default  reduce using rule 48 (parte_izq)


State 24

   35 sent: RETURN . exp SEMICOLON
   36     | RETURN . SEMICOLON

    SEMICOLON  shift, and go to state 51
    ID         shift, and go to state 40
    CADENA     shift, and go to state 41
    CARACTER   shift, and go to state 42
    PLUS       shift, and go to state 43
    MINUS      shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 52


State 25

   33 sent: FOR . LPAR assign SEMICOLON cond SEMICOLON assign RPAR sent

    LPAR  shift, and go to state 53


State 26

    4 prog: $@1 decls $@2 sent . $@3

    $default  reduce using rule 3 ($@3)

    $@3  go to state 54


State 27

   34 sent: assign . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 28

   41 assign: parte_izq . ASSIG exp

    ASSIG  shift, and go to state 56


State 29

   49 parte_izq: var_arr .
   52 var_arr: var_arr . LBRACKET exp RBRACKET

    LBRACKET  shift, and go to state 57

    $default  reduce using rule 49 (parte_izq)


State 30

   16 lista: ID . arreglo

    LBRACKET  shift, and go to state 58

    $default  reduce using rule 24 (arreglo)

    arreglo  go to state 59


State 31

    6 decls: tipo $@4 lista . SEMICOLON decls
   15 lista: lista . COMMA ID arreglo

    SEMICOLON  shift, and go to state 60
    COMMA      shift, and go to state 61


State 32

   14 tipo: STRUCT LCURLYB $@5 decls . RCURLYB

    RCURLYB  shift, and go to state 62


State 33

   26 sents: sents . $@6 sent
   37 sent: LCURLYB sents . RCURLYB

    RCURLYB  shift, and go to state 63

    $default  reduce using rule 25 ($@6)

    $@6  go to state 64


State 34

   27 sents: sent .

    $default  reduce using rule 27 (sents)


State 35

   30 sent: IF LPAR . cond RPAR $@7 sent $@8 sentp

    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44
    NOT       shift, and go to state 67
    LPAR      shift, and go to state 68

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 69
    cond     go to state 70


State 36

   31 sent: WHILE LPAR . cond RPAR sent

    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44
    NOT       shift, and go to state 67
    LPAR      shift, and go to state 68

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 69
    cond     go to state 71


State 37

   32 sent: DO sent . WHILE LPAR cond RPAR SEMICOLON

    WHILE  shift, and go to state 72


State 38

   38 sent: SWITCH LPAR . exp RPAR LCURLYB casos RCURLYB

    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 73


State 39

   39 sent: BREAK SEMICOLON .

    $default  reduce using rule 39 (sent)


State 40

   51 var_arr: ID . LBRACKET exp RBRACKET
   59 exp: ID .
   63    | ID . LPAR params RPAR

    LBRACKET  shift, and go to state 49
    LPAR      shift, and go to state 74

    $default  reduce using rule 59 (exp)


State 41

   60 exp: CADENA .

    $default  reduce using rule 60 (exp)


State 42

   62 exp: CARACTER .

    $default  reduce using rule 62 (exp)


State 43

   20 signo: PLUS .

    $default  reduce using rule 20 (signo)


State 44

   21 signo: MINUS .

    $default  reduce using rule 21 (signo)


State 45

   61 exp: numero .

    $default  reduce using rule 61 (exp)


State 46

   17 numero: signo . INT
   18       | signo . DOUBLE
   19       | signo . FLOAT

    INT     shift, and go to state 75
    DOUBLE  shift, and go to state 76
    FLOAT   shift, and go to state 77


State 47

   52 var_arr: var_arr . LBRACKET exp RBRACKET
   58 exp: var_arr .

    LBRACKET  shift, and go to state 57

    $default  reduce using rule 58 (exp)


State 48

   40 sent: PRINT exp . SEMICOLON
   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   55    | exp . PROD exp
   56    | exp . DIV exp
   57    | exp . MOD exp

    SEMICOLON  shift, and go to state 78
    PLUS       shift, and go to state 79
    MINUS      shift, and go to state 80
    PROD       shift, and go to state 81
    DIV        shift, and go to state 82
    MOD        shift, and go to state 83


State 49

   51 var_arr: ID LBRACKET . exp RBRACKET

    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 84


State 50

   50 parte_izq: ID DOT . ID

    ID  shift, and go to state 85


State 51

   36 sent: RETURN SEMICOLON .

    $default  reduce using rule 36 (sent)


State 52

   35 sent: RETURN exp . SEMICOLON
   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   55    | exp . PROD exp
   56    | exp . DIV exp
   57    | exp . MOD exp

    SEMICOLON  shift, and go to state 86
    PLUS       shift, and go to state 79
    MINUS      shift, and go to state 80
    PROD       shift, and go to state 81
    DIV        shift, and go to state 82
    MOD        shift, and go to state 83


State 53

   33 sent: FOR LPAR . assign SEMICOLON cond SEMICOLON assign RPAR sent

    ID  shift, and go to state 23

    assign     go to state 87
    parte_izq  go to state 28
    var_arr    go to state 29


State 54

    4 prog: $@1 decls $@2 sent $@3 .

    $default  reduce using rule 4 (prog)


State 55

   34 sent: assign SEMICOLON .

    $default  reduce using rule 34 (sent)


State 56

   41 assign: parte_izq ASSIG . exp

    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 88


State 57

   52 var_arr: var_arr LBRACKET . exp RBRACKET

    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 89


State 58

   23 arreglo: LBRACKET . numero RBRACKET arreglo

    PLUS   shift, and go to state 43
    MINUS  shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero  go to state 90
    signo   go to state 46


State 59

   16 lista: ID arreglo .

    $default  reduce using rule 16 (lista)


State 60

    6 decls: tipo $@4 lista SEMICOLON . decls

    INTTYPE     shift, and go to state 4
    FLOATTYPE   shift, and go to state 5
    DOUBLETYPE  shift, and go to state 6
    CHARTYPE    shift, and go to state 7
    VOID        shift, and go to state 8
    STRUCT      shift, and go to state 9

    $default  reduce using rule 7 (decls)

    decls  go to state 91
    tipo   go to state 11


State 61

   15 lista: lista COMMA . ID arreglo

    ID  shift, and go to state 92


State 62

   14 tipo: STRUCT LCURLYB $@5 decls RCURLYB .

    $default  reduce using rule 14 (tipo)


State 63

   37 sent: LCURLYB sents RCURLYB .

    $default  reduce using rule 37 (sent)


State 64

   26 sents: sents $@6 . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 93
    assign     go to state 27
    parte_izq  go to state 28
    var_arr    go to state 29


State 65

   75 cond: TRUE .

    $default  reduce using rule 75 (cond)


State 66

   76 cond: FALSE .

    $default  reduce using rule 76 (cond)


State 67

   72 cond: NOT . cond

    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44
    NOT       shift, and go to state 67
    LPAR      shift, and go to state 68

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 69
    cond     go to state 94


State 68

   73 cond: LPAR . cond RPAR

    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44
    NOT       shift, and go to state 67
    LPAR      shift, and go to state 68

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 69
    cond     go to state 95


State 69

   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   55    | exp . PROD exp
   56    | exp . DIV exp
   57    | exp . MOD exp
   74 cond: exp . rel exp

    EQ     shift, and go to state 96
    NEQ    shift, and go to state 97
    GT     shift, and go to state 98
    GEQ    shift, and go to state 99
    LT     shift, and go to state 100
    LEQ    shift, and go to state 101
    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    PROD   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83

    rel  go to state 102


State 70

   30 sent: IF LPAR cond . RPAR $@7 sent $@8 sentp
   69 cond: cond . OR $@10 cond
   71     | cond . AND $@11 cond

    OR    shift, and go to state 103
    AND   shift, and go to state 104
    RPAR  shift, and go to state 105


State 71

   31 sent: WHILE LPAR cond . RPAR sent
   69 cond: cond . OR $@10 cond
   71     | cond . AND $@11 cond

    OR    shift, and go to state 103
    AND   shift, and go to state 104
    RPAR  shift, and go to state 106


State 72

   32 sent: DO sent WHILE . LPAR cond RPAR SEMICOLON

    LPAR  shift, and go to state 107


State 73

   38 sent: SWITCH LPAR exp . RPAR LCURLYB casos RCURLYB
   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   55    | exp . PROD exp
   56    | exp . DIV exp
   57    | exp . MOD exp

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    PROD   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    RPAR   shift, and go to state 108


State 74

   63 exp: ID LPAR . params RPAR

    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44

    RPAR      reduce using rule 65 (params)
    $default  reduce using rule 22 (signo)

    numero       go to state 45
    signo        go to state 46
    var_arr      go to state 47
    exp          go to state 109
    params       go to state 110
    lista_param  go to state 111


State 75

   17 numero: signo INT .

    $default  reduce using rule 17 (numero)


State 76

   18 numero: signo DOUBLE .

    $default  reduce using rule 18 (numero)


State 77

   19 numero: signo FLOAT .

    $default  reduce using rule 19 (numero)


State 78

   40 sent: PRINT exp SEMICOLON .

    $default  reduce using rule 40 (sent)


State 79

   53 exp: exp PLUS . exp

    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 112


State 80

   54 exp: exp MINUS . exp

    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 113


State 81

   55 exp: exp PROD . exp

    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 114


State 82

   56 exp: exp DIV . exp

    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 115


State 83

   57 exp: exp MOD . exp

    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 116


State 84

   51 var_arr: ID LBRACKET exp . RBRACKET
   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   55    | exp . PROD exp
   56    | exp . DIV exp
   57    | exp . MOD exp

    RBRACKET  shift, and go to state 117
    PLUS      shift, and go to state 79
    MINUS     shift, and go to state 80
    PROD      shift, and go to state 81
    DIV       shift, and go to state 82
    MOD       shift, and go to state 83


State 85

   50 parte_izq: ID DOT ID .

    $default  reduce using rule 50 (parte_izq)


State 86

   35 sent: RETURN exp SEMICOLON .

    $default  reduce using rule 35 (sent)


State 87

   33 sent: FOR LPAR assign . SEMICOLON cond SEMICOLON assign RPAR sent

    SEMICOLON  shift, and go to state 118


State 88

   41 assign: parte_izq ASSIG exp .
   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   55    | exp . PROD exp
   56    | exp . DIV exp
   57    | exp . MOD exp

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    PROD   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83

    $default  reduce using rule 41 (assign)


State 89

   52 var_arr: var_arr LBRACKET exp . RBRACKET
   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   55    | exp . PROD exp
   56    | exp . DIV exp
   57    | exp . MOD exp

    RBRACKET  shift, and go to state 119
    PLUS      shift, and go to state 79
    MINUS     shift, and go to state 80
    PROD      shift, and go to state 81
    DIV       shift, and go to state 82
    MOD       shift, and go to state 83


State 90

   23 arreglo: LBRACKET numero . RBRACKET arreglo

    RBRACKET  shift, and go to state 120


State 91

    6 decls: tipo $@4 lista SEMICOLON decls .

    $default  reduce using rule 6 (decls)


State 92

   15 lista: lista COMMA ID . arreglo

    LBRACKET  shift, and go to state 58

    $default  reduce using rule 24 (arreglo)

    arreglo  go to state 121


State 93

   26 sents: sents $@6 sent .

    $default  reduce using rule 26 (sents)


State 94

   69 cond: cond . OR $@10 cond
   71     | cond . AND $@11 cond
   72     | NOT cond .

    $default  reduce using rule 72 (cond)


State 95

   69 cond: cond . OR $@10 cond
   71     | cond . AND $@11 cond
   73     | LPAR cond . RPAR

    OR    shift, and go to state 103
    AND   shift, and go to state 104
    RPAR  shift, and go to state 122


State 96

   82 rel: EQ .

    $default  reduce using rule 82 (rel)


State 97

   81 rel: NEQ .

    $default  reduce using rule 81 (rel)


State 98

   78 rel: GT .

    $default  reduce using rule 78 (rel)


State 99

   80 rel: GEQ .

    $default  reduce using rule 80 (rel)


State 100

   77 rel: LT .

    $default  reduce using rule 77 (rel)


State 101

   79 rel: LEQ .

    $default  reduce using rule 79 (rel)


State 102

   74 cond: exp rel . exp

    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 123


State 103

   69 cond: cond OR . $@10 cond

    $default  reduce using rule 68 ($@10)

    $@10  go to state 124


State 104

   71 cond: cond AND . $@11 cond

    $default  reduce using rule 70 ($@11)

    $@11  go to state 125


State 105

   30 sent: IF LPAR cond RPAR . $@7 sent $@8 sentp

    $default  reduce using rule 28 ($@7)

    $@7  go to state 126


State 106

   31 sent: WHILE LPAR cond RPAR . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 127
    assign     go to state 27
    parte_izq  go to state 28
    var_arr    go to state 29


State 107

   32 sent: DO sent WHILE LPAR . cond RPAR SEMICOLON

    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44
    NOT       shift, and go to state 67
    LPAR      shift, and go to state 68

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 69
    cond     go to state 128


State 108

   38 sent: SWITCH LPAR exp RPAR . LCURLYB casos RCURLYB

    LCURLYB  shift, and go to state 129


State 109

   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   55    | exp . PROD exp
   56    | exp . DIV exp
   57    | exp . MOD exp
   67 lista_param: exp .

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    PROD   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83

    $default  reduce using rule 67 (lista_param)


State 110

   63 exp: ID LPAR params . RPAR

    RPAR  shift, and go to state 130


State 111

   64 params: lista_param .
   66 lista_param: lista_param . COMMA exp

    COMMA  shift, and go to state 131

    $default  reduce using rule 64 (params)


State 112

   53 exp: exp . PLUS exp
   53    | exp PLUS exp .
   54    | exp . MINUS exp
   55    | exp . PROD exp
   56    | exp . DIV exp
   57    | exp . MOD exp

    PROD  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 83

    $default  reduce using rule 53 (exp)


State 113

   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   54    | exp MINUS exp .
   55    | exp . PROD exp
   56    | exp . DIV exp
   57    | exp . MOD exp

    PROD  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 83

    $default  reduce using rule 54 (exp)


State 114

   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   55    | exp . PROD exp
   55    | exp PROD exp .
   56    | exp . DIV exp
   57    | exp . MOD exp

    $default  reduce using rule 55 (exp)


State 115

   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   55    | exp . PROD exp
   56    | exp . DIV exp
   56    | exp DIV exp .
   57    | exp . MOD exp

    $default  reduce using rule 56 (exp)


State 116

   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   55    | exp . PROD exp
   56    | exp . DIV exp
   57    | exp . MOD exp
   57    | exp MOD exp .

    $default  reduce using rule 57 (exp)


State 117

   51 var_arr: ID LBRACKET exp RBRACKET .

    $default  reduce using rule 51 (var_arr)


State 118

   33 sent: FOR LPAR assign SEMICOLON . cond SEMICOLON assign RPAR sent

    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44
    NOT       shift, and go to state 67
    LPAR      shift, and go to state 68

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 69
    cond     go to state 132


State 119

   52 var_arr: var_arr LBRACKET exp RBRACKET .

    $default  reduce using rule 52 (var_arr)


State 120

   23 arreglo: LBRACKET numero RBRACKET . arreglo

    LBRACKET  shift, and go to state 58

    $default  reduce using rule 24 (arreglo)

    arreglo  go to state 133


State 121

   15 lista: lista COMMA ID arreglo .

    $default  reduce using rule 15 (lista)


State 122

   73 cond: LPAR cond RPAR .

    $default  reduce using rule 73 (cond)


State 123

   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   55    | exp . PROD exp
   56    | exp . DIV exp
   57    | exp . MOD exp
   74 cond: exp rel exp .

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    PROD   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83

    $default  reduce using rule 74 (cond)


State 124

   69 cond: cond OR $@10 . cond

    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44
    NOT       shift, and go to state 67
    LPAR      shift, and go to state 68

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 69
    cond     go to state 134


State 125

   71 cond: cond AND $@11 . cond

    TRUE      shift, and go to state 65
    FALSE     shift, and go to state 66
    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44
    NOT       shift, and go to state 67
    LPAR      shift, and go to state 68

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 69
    cond     go to state 135


State 126

   30 sent: IF LPAR cond RPAR $@7 . sent $@8 sentp

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 136
    assign     go to state 27
    parte_izq  go to state 28
    var_arr    go to state 29


State 127

   31 sent: WHILE LPAR cond RPAR sent .

    $default  reduce using rule 31 (sent)


State 128

   32 sent: DO sent WHILE LPAR cond . RPAR SEMICOLON
   69 cond: cond . OR $@10 cond
   71     | cond . AND $@11 cond

    OR    shift, and go to state 103
    AND   shift, and go to state 104
    RPAR  shift, and go to state 137


State 129

   38 sent: SWITCH LPAR exp RPAR LCURLYB . casos RCURLYB

    CASE     shift, and go to state 138
    DEFAULT  shift, and go to state 139

    $default  reduce using rule 47 (casos)

    casos  go to state 140


State 130

   63 exp: ID LPAR params RPAR .

    $default  reduce using rule 63 (exp)


State 131

   66 lista_param: lista_param COMMA . exp

    ID        shift, and go to state 40
    CADENA    shift, and go to state 41
    CARACTER  shift, and go to state 42
    PLUS      shift, and go to state 43
    MINUS     shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero   go to state 45
    signo    go to state 46
    var_arr  go to state 47
    exp      go to state 141


State 132

   33 sent: FOR LPAR assign SEMICOLON cond . SEMICOLON assign RPAR sent
   69 cond: cond . OR $@10 cond
   71     | cond . AND $@11 cond

    SEMICOLON  shift, and go to state 142
    OR         shift, and go to state 103
    AND        shift, and go to state 104


State 133

   23 arreglo: LBRACKET numero RBRACKET arreglo .

    $default  reduce using rule 23 (arreglo)


State 134

   69 cond: cond . OR $@10 cond
   69     | cond OR $@10 cond .
   71     | cond . AND $@11 cond

    AND  shift, and go to state 104

    $default  reduce using rule 69 (cond)


State 135

   69 cond: cond . OR $@10 cond
   71     | cond . AND $@11 cond
   71     | cond AND $@11 cond .

    $default  reduce using rule 71 (cond)


State 136

   30 sent: IF LPAR cond RPAR $@7 sent . $@8 sentp

    $default  reduce using rule 29 ($@8)

    $@8  go to state 143


State 137

   32 sent: DO sent WHILE LPAR cond RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 144


State 138

   45 casos: CASE . numero sent casos

    PLUS   shift, and go to state 43
    MINUS  shift, and go to state 44

    $default  reduce using rule 22 (signo)

    numero  go to state 145
    signo   go to state 46


State 139

   46 casos: DEFAULT . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 146
    assign     go to state 27
    parte_izq  go to state 28
    var_arr    go to state 29


State 140

   38 sent: SWITCH LPAR exp RPAR LCURLYB casos . RCURLYB

    RCURLYB  shift, and go to state 147


State 141

   53 exp: exp . PLUS exp
   54    | exp . MINUS exp
   55    | exp . PROD exp
   56    | exp . DIV exp
   57    | exp . MOD exp
   66 lista_param: lista_param COMMA exp .

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    PROD   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83

    $default  reduce using rule 66 (lista_param)


State 142

   33 sent: FOR LPAR assign SEMICOLON cond SEMICOLON . assign RPAR sent

    ID  shift, and go to state 23

    assign     go to state 148
    parte_izq  go to state 28
    var_arr    go to state 29


State 143

   30 sent: IF LPAR cond RPAR $@7 sent $@8 . sentp

    ELSE  shift, and go to state 149

    $default  reduce using rule 42 (sentp)

    sentp  go to state 150


State 144

   32 sent: DO sent WHILE LPAR cond RPAR SEMICOLON .

    $default  reduce using rule 32 (sent)


State 145

   45 casos: CASE numero . sent casos

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 151
    assign     go to state 27
    parte_izq  go to state 28
    var_arr    go to state 29


State 146

   46 casos: DEFAULT sent .

    $default  reduce using rule 46 (casos)


State 147

   38 sent: SWITCH LPAR exp RPAR LCURLYB casos RCURLYB .

    $default  reduce using rule 38 (sent)


State 148

   33 sent: FOR LPAR assign SEMICOLON cond SEMICOLON assign . RPAR sent

    RPAR  shift, and go to state 152


State 149

   44 sentp: ELSE . $@9 sent

    $default  reduce using rule 43 ($@9)

    $@9  go to state 153


State 150

   30 sent: IF LPAR cond RPAR $@7 sent $@8 sentp .

    $default  reduce using rule 30 (sent)


State 151

   45 casos: CASE numero sent . casos

    CASE     shift, and go to state 138
    DEFAULT  shift, and go to state 139

    $default  reduce using rule 47 (casos)

    casos  go to state 154


State 152

   33 sent: FOR LPAR assign SEMICOLON cond SEMICOLON assign RPAR . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 155
    assign     go to state 27
    parte_izq  go to state 28
    var_arr    go to state 29


State 153

   44 sentp: ELSE $@9 . sent

    LCURLYB  shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18
    DO       shift, and go to state 19
    SWITCH   shift, and go to state 20
    BREAK    shift, and go to state 21
    PRINT    shift, and go to state 22
    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    FOR      shift, and go to state 25

    sent       go to state 156
    assign     go to state 27
    parte_izq  go to state 28
    var_arr    go to state 29


State 154

   45 casos: CASE numero sent casos .

    $default  reduce using rule 45 (casos)


State 155

   33 sent: FOR LPAR assign SEMICOLON cond SEMICOLON assign RPAR sent .

    $default  reduce using rule 33 (sent)


State 156

   44 sentp: ELSE $@9 sent .

    $default  reduce using rule 44 (sentp)
