Terminals unused in grammar

   END


Grammar

    0 $accept: prog $end

    1 prog: decls funcs

    2 decls: tipo lista SEMICOLON decls
    3      | %empty

    4 tipo: INTTYPE
    5     | FLOATTYPE
    6     | DOUBLETYPE
    7     | CHARTYPE
    8     | VOID
    9     | STRUCT LCURLYB decls RCURLYB

   10 lista: lista COMMA ID arreglo
   11      | ID arreglo

   12 numero: signo INT
   13       | signo DOUBLE
   14       | signo FLOAT

   15 signo: PLUS
   16      | MINUS
   17      | %empty

   18 arreglo: LBRACKET numero RBRACKET arreglo
   19        | %empty

   20 funcs: FUNC tipo ID LPAR args RPAR LCURLYB decls sents RCURLYB funcs
   21      | %empty

   22 args: lista_args
   23     | %empty

   24 lista_args: lista_args COMMA tipo ID parte_arr
   25           | tipo ID parte_arr

   26 parte_arr: LBRACKET RBRACKET parte_arr
   27          | %empty

   28 sents: sents sent
   29      | sent

   30 sent: IF LPAR cond RPAR sent sentp
   31     | WHILE LPAR cond RPAR sent
   32     | DO sent WHILE LPAR cond RPAR SEMICOLON
   33     | FOR LPAR sent SEMICOLON cond SEMICOLON sent RPAR sent
   34     | parte_izq ASSIG exp SEMICOLON
   35     | RETURN exp SEMICOLON
   36     | RETURN SEMICOLON
   37     | LCURLYB sents RCURLYB
   38     | SWITCH LPAR exp RPAR LCURLYB casos RCURLYB
   39     | BREAK SEMICOLON
   40     | PRINT exp SEMICOLON

   41 sentp: %empty
   42      | ELSE sent

   43 casos: CASE numero sent casos
   44      | DEFAULT sent
   45      | %empty

   46 parte_izq: ID
   47          | var_arr
   48          | ID DOT ID

   49 var_arr: ID LBRACKET exp RBRACKET
   50        | var_arr LBRACKET exp RBRACKET

   51 exp: exp PLUS exp
   52    | exp MINUS exp
   53    | exp PROD exp
   54    | exp DIV exp
   55    | exp MOD exp
   56    | var_arr
   57    | CADENA
   58    | numero
   59    | CARACTER
   60    | ID LPAR params RPAR

   61 params: lista_param
   62       | %empty

   63 lista_param: lista_param COMMA exp
   64            | exp

   65 cond: cond OR cond
   66     | cond AND cond
   67     | NOT cond
   68     | LPAR cond RPAR
   69     | exp rel exp
   70     | TRUE
   71     | FALSE

   72 rel: LT
   73    | GT
   74    | LEQ
   75    | GEQ
   76    | NEQ
   77    | EQ


Terminals, with rules where they appear

$end (0) 0
error (256)
END (258)
INTTYPE (259) 4
FLOATTYPE (260) 5
DOUBLETYPE (261) 6
CHARTYPE (262) 7
FUNC (263) 20
VOID (264) 8
STRUCT (265) 9
LCURLYB (266) 9 20 37 38
RCURLYB (267) 9 20 37 38
LBRACKET (268) 18 26 49 50
RBRACKET (269) 18 26 49 50
SEMICOLON (270) 2 32 33 34 35 36 39 40
DOT (271) 48
TRUE (272) 70
FALSE (273) 71
IF (274) 30
ELSE (275) 42
WHILE (276) 31 32
DO (277) 32
SWITCH (278) 38
CASE (279) 43
DEFAULT (280) 44
BREAK (281) 39
PRINT (282) 40
ID (283) 10 11 20 24 25 46 48 49 60
INT (284) 12
DOUBLE (285) 13
FLOAT (286) 14
CADENA (287) 57
CARACTER (288) 59
COMMA (289) 10 24 63
RETURN (290) 35 36
FOR (291) 33
ASSIG (292) 34
OR (293) 65
AND (294) 66
EQ (295) 77
NEQ (296) 76
GT (297) 73
GEQ (298) 75
LT (299) 72
LEQ (300) 74
PLUS (301) 15 51
MINUS (302) 16 52
PROD (303) 53
DIV (304) 54
MOD (305) 55
NOT (306) 67
LPAR (307) 20 30 31 32 33 38 60 68
RPAR (308) 20 30 31 32 33 38 60 68
IFX (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
prog (56)
    on left: 1, on right: 0
decls (57)
    on left: 2 3, on right: 1 2 9 20
tipo (58)
    on left: 4 5 6 7 8 9, on right: 2 20 24 25
lista (59)
    on left: 10 11, on right: 2 10
numero (60)
    on left: 12 13 14, on right: 18 43 58
signo (61)
    on left: 15 16 17, on right: 12 13 14
arreglo (62)
    on left: 18 19, on right: 10 11 18
funcs (63)
    on left: 20 21, on right: 1 20
args (64)
    on left: 22 23, on right: 20
lista_args (65)
    on left: 24 25, on right: 22 24
parte_arr (66)
    on left: 26 27, on right: 24 25 26
sents (67)
    on left: 28 29, on right: 20 28 37
sent (68)
    on left: 30 31 32 33 34 35 36 37 38 39 40, on right: 28 29 30 31
    32 33 42 43 44
sentp (69)
    on left: 41 42, on right: 30
casos (70)
    on left: 43 44 45, on right: 38 43
parte_izq (71)
    on left: 46 47 48, on right: 34
var_arr (72)
    on left: 49 50, on right: 47 50 56
exp (73)
    on left: 51 52 53 54 55 56 57 58 59 60, on right: 34 35 38 40 49
    50 51 52 53 54 55 63 64 69
params (74)
    on left: 61 62, on right: 60
lista_param (75)
    on left: 63 64, on right: 61 63
cond (76)
    on left: 65 66 67 68 69 70 71, on right: 30 31 32 33 65 66 67 68
rel (77)
    on left: 72 73 74 75 76 77, on right: 69


State 0

    0 $accept: . prog $end

    INTTYPE     shift, and go to state 1
    FLOATTYPE   shift, and go to state 2
    DOUBLETYPE  shift, and go to state 3
    CHARTYPE    shift, and go to state 4
    VOID        shift, and go to state 5
    STRUCT      shift, and go to state 6

    $default  reduce using rule 3 (decls)

    prog   go to state 7
    decls  go to state 8
    tipo   go to state 9


State 1

    4 tipo: INTTYPE .

    $default  reduce using rule 4 (tipo)


State 2

    5 tipo: FLOATTYPE .

    $default  reduce using rule 5 (tipo)


State 3

    6 tipo: DOUBLETYPE .

    $default  reduce using rule 6 (tipo)


State 4

    7 tipo: CHARTYPE .

    $default  reduce using rule 7 (tipo)


State 5

    8 tipo: VOID .

    $default  reduce using rule 8 (tipo)


State 6

    9 tipo: STRUCT . LCURLYB decls RCURLYB

    LCURLYB  shift, and go to state 10


State 7

    0 $accept: prog . $end

    $end  shift, and go to state 11


State 8

    1 prog: decls . funcs

    FUNC  shift, and go to state 12

    $default  reduce using rule 21 (funcs)

    funcs  go to state 13


State 9

    2 decls: tipo . lista SEMICOLON decls

    ID  shift, and go to state 14

    lista  go to state 15


State 10

    9 tipo: STRUCT LCURLYB . decls RCURLYB

    INTTYPE     shift, and go to state 1
    FLOATTYPE   shift, and go to state 2
    DOUBLETYPE  shift, and go to state 3
    CHARTYPE    shift, and go to state 4
    VOID        shift, and go to state 5
    STRUCT      shift, and go to state 6

    $default  reduce using rule 3 (decls)

    decls  go to state 16
    tipo   go to state 9


State 11

    0 $accept: prog $end .

    $default  accept


State 12

   20 funcs: FUNC . tipo ID LPAR args RPAR LCURLYB decls sents RCURLYB funcs

    INTTYPE     shift, and go to state 1
    FLOATTYPE   shift, and go to state 2
    DOUBLETYPE  shift, and go to state 3
    CHARTYPE    shift, and go to state 4
    VOID        shift, and go to state 5
    STRUCT      shift, and go to state 6

    tipo  go to state 17


State 13

    1 prog: decls funcs .

    $default  reduce using rule 1 (prog)


State 14

   11 lista: ID . arreglo

    LBRACKET  shift, and go to state 18

    $default  reduce using rule 19 (arreglo)

    arreglo  go to state 19


State 15

    2 decls: tipo lista . SEMICOLON decls
   10 lista: lista . COMMA ID arreglo

    SEMICOLON  shift, and go to state 20
    COMMA      shift, and go to state 21


State 16

    9 tipo: STRUCT LCURLYB decls . RCURLYB

    RCURLYB  shift, and go to state 22


State 17

   20 funcs: FUNC tipo . ID LPAR args RPAR LCURLYB decls sents RCURLYB funcs

    ID  shift, and go to state 23


State 18

   18 arreglo: LBRACKET . numero RBRACKET arreglo

    PLUS   shift, and go to state 24
    MINUS  shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero  go to state 26
    signo   go to state 27


State 19

   11 lista: ID arreglo .

    $default  reduce using rule 11 (lista)


State 20

    2 decls: tipo lista SEMICOLON . decls

    INTTYPE     shift, and go to state 1
    FLOATTYPE   shift, and go to state 2
    DOUBLETYPE  shift, and go to state 3
    CHARTYPE    shift, and go to state 4
    VOID        shift, and go to state 5
    STRUCT      shift, and go to state 6

    $default  reduce using rule 3 (decls)

    decls  go to state 28
    tipo   go to state 9


State 21

   10 lista: lista COMMA . ID arreglo

    ID  shift, and go to state 29


State 22

    9 tipo: STRUCT LCURLYB decls RCURLYB .

    $default  reduce using rule 9 (tipo)


State 23

   20 funcs: FUNC tipo ID . LPAR args RPAR LCURLYB decls sents RCURLYB funcs

    LPAR  shift, and go to state 30


State 24

   15 signo: PLUS .

    $default  reduce using rule 15 (signo)


State 25

   16 signo: MINUS .

    $default  reduce using rule 16 (signo)


State 26

   18 arreglo: LBRACKET numero . RBRACKET arreglo

    RBRACKET  shift, and go to state 31


State 27

   12 numero: signo . INT
   13       | signo . DOUBLE
   14       | signo . FLOAT

    INT     shift, and go to state 32
    DOUBLE  shift, and go to state 33
    FLOAT   shift, and go to state 34


State 28

    2 decls: tipo lista SEMICOLON decls .

    $default  reduce using rule 2 (decls)


State 29

   10 lista: lista COMMA ID . arreglo

    LBRACKET  shift, and go to state 18

    $default  reduce using rule 19 (arreglo)

    arreglo  go to state 35


State 30

   20 funcs: FUNC tipo ID LPAR . args RPAR LCURLYB decls sents RCURLYB funcs

    INTTYPE     shift, and go to state 1
    FLOATTYPE   shift, and go to state 2
    DOUBLETYPE  shift, and go to state 3
    CHARTYPE    shift, and go to state 4
    VOID        shift, and go to state 5
    STRUCT      shift, and go to state 6

    $default  reduce using rule 23 (args)

    tipo        go to state 36
    args        go to state 37
    lista_args  go to state 38


State 31

   18 arreglo: LBRACKET numero RBRACKET . arreglo

    LBRACKET  shift, and go to state 18

    $default  reduce using rule 19 (arreglo)

    arreglo  go to state 39


State 32

   12 numero: signo INT .

    $default  reduce using rule 12 (numero)


State 33

   13 numero: signo DOUBLE .

    $default  reduce using rule 13 (numero)


State 34

   14 numero: signo FLOAT .

    $default  reduce using rule 14 (numero)


State 35

   10 lista: lista COMMA ID arreglo .

    $default  reduce using rule 10 (lista)


State 36

   25 lista_args: tipo . ID parte_arr

    ID  shift, and go to state 40


State 37

   20 funcs: FUNC tipo ID LPAR args . RPAR LCURLYB decls sents RCURLYB funcs

    RPAR  shift, and go to state 41


State 38

   22 args: lista_args .
   24 lista_args: lista_args . COMMA tipo ID parte_arr

    COMMA  shift, and go to state 42

    $default  reduce using rule 22 (args)


State 39

   18 arreglo: LBRACKET numero RBRACKET arreglo .

    $default  reduce using rule 18 (arreglo)


State 40

   25 lista_args: tipo ID . parte_arr

    LBRACKET  shift, and go to state 43

    $default  reduce using rule 27 (parte_arr)

    parte_arr  go to state 44


State 41

   20 funcs: FUNC tipo ID LPAR args RPAR . LCURLYB decls sents RCURLYB funcs

    LCURLYB  shift, and go to state 45


State 42

   24 lista_args: lista_args COMMA . tipo ID parte_arr

    INTTYPE     shift, and go to state 1
    FLOATTYPE   shift, and go to state 2
    DOUBLETYPE  shift, and go to state 3
    CHARTYPE    shift, and go to state 4
    VOID        shift, and go to state 5
    STRUCT      shift, and go to state 6

    tipo  go to state 46


State 43

   26 parte_arr: LBRACKET . RBRACKET parte_arr

    RBRACKET  shift, and go to state 47


State 44

   25 lista_args: tipo ID parte_arr .

    $default  reduce using rule 25 (lista_args)


State 45

   20 funcs: FUNC tipo ID LPAR args RPAR LCURLYB . decls sents RCURLYB funcs

    INTTYPE     shift, and go to state 1
    FLOATTYPE   shift, and go to state 2
    DOUBLETYPE  shift, and go to state 3
    CHARTYPE    shift, and go to state 4
    VOID        shift, and go to state 5
    STRUCT      shift, and go to state 6

    $default  reduce using rule 3 (decls)

    decls  go to state 48
    tipo   go to state 9


State 46

   24 lista_args: lista_args COMMA tipo . ID parte_arr

    ID  shift, and go to state 49


State 47

   26 parte_arr: LBRACKET RBRACKET . parte_arr

    LBRACKET  shift, and go to state 43

    $default  reduce using rule 27 (parte_arr)

    parte_arr  go to state 50


State 48

   20 funcs: FUNC tipo ID LPAR args RPAR LCURLYB decls . sents RCURLYB funcs

    LCURLYB  shift, and go to state 51
    IF       shift, and go to state 52
    WHILE    shift, and go to state 53
    DO       shift, and go to state 54
    SWITCH   shift, and go to state 55
    BREAK    shift, and go to state 56
    PRINT    shift, and go to state 57
    ID       shift, and go to state 58
    RETURN   shift, and go to state 59
    FOR      shift, and go to state 60

    sents      go to state 61
    sent       go to state 62
    parte_izq  go to state 63
    var_arr    go to state 64


State 49

   24 lista_args: lista_args COMMA tipo ID . parte_arr

    LBRACKET  shift, and go to state 43

    $default  reduce using rule 27 (parte_arr)

    parte_arr  go to state 65


State 50

   26 parte_arr: LBRACKET RBRACKET parte_arr .

    $default  reduce using rule 26 (parte_arr)


State 51

   37 sent: LCURLYB . sents RCURLYB

    LCURLYB  shift, and go to state 51
    IF       shift, and go to state 52
    WHILE    shift, and go to state 53
    DO       shift, and go to state 54
    SWITCH   shift, and go to state 55
    BREAK    shift, and go to state 56
    PRINT    shift, and go to state 57
    ID       shift, and go to state 58
    RETURN   shift, and go to state 59
    FOR      shift, and go to state 60

    sents      go to state 66
    sent       go to state 62
    parte_izq  go to state 63
    var_arr    go to state 64


State 52

   30 sent: IF . LPAR cond RPAR sent sentp

    LPAR  shift, and go to state 67


State 53

   31 sent: WHILE . LPAR cond RPAR sent

    LPAR  shift, and go to state 68


State 54

   32 sent: DO . sent WHILE LPAR cond RPAR SEMICOLON

    LCURLYB  shift, and go to state 51
    IF       shift, and go to state 52
    WHILE    shift, and go to state 53
    DO       shift, and go to state 54
    SWITCH   shift, and go to state 55
    BREAK    shift, and go to state 56
    PRINT    shift, and go to state 57
    ID       shift, and go to state 58
    RETURN   shift, and go to state 59
    FOR      shift, and go to state 60

    sent       go to state 69
    parte_izq  go to state 63
    var_arr    go to state 64


State 55

   38 sent: SWITCH . LPAR exp RPAR LCURLYB casos RCURLYB

    LPAR  shift, and go to state 70


State 56

   39 sent: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 71


State 57

   40 sent: PRINT . exp SEMICOLON

    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 77


State 58

   46 parte_izq: ID .
   48          | ID . DOT ID
   49 var_arr: ID . LBRACKET exp RBRACKET

    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 79

    $default  reduce using rule 46 (parte_izq)


State 59

   35 sent: RETURN . exp SEMICOLON
   36     | RETURN . SEMICOLON

    SEMICOLON  shift, and go to state 80
    ID         shift, and go to state 72
    CADENA     shift, and go to state 73
    CARACTER   shift, and go to state 74
    PLUS       shift, and go to state 24
    MINUS      shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 81


State 60

   33 sent: FOR . LPAR sent SEMICOLON cond SEMICOLON sent RPAR sent

    LPAR  shift, and go to state 82


State 61

   20 funcs: FUNC tipo ID LPAR args RPAR LCURLYB decls sents . RCURLYB funcs
   28 sents: sents . sent

    LCURLYB  shift, and go to state 51
    RCURLYB  shift, and go to state 83
    IF       shift, and go to state 52
    WHILE    shift, and go to state 53
    DO       shift, and go to state 54
    SWITCH   shift, and go to state 55
    BREAK    shift, and go to state 56
    PRINT    shift, and go to state 57
    ID       shift, and go to state 58
    RETURN   shift, and go to state 59
    FOR      shift, and go to state 60

    sent       go to state 84
    parte_izq  go to state 63
    var_arr    go to state 64


State 62

   29 sents: sent .

    $default  reduce using rule 29 (sents)


State 63

   34 sent: parte_izq . ASSIG exp SEMICOLON

    ASSIG  shift, and go to state 85


State 64

   47 parte_izq: var_arr .
   50 var_arr: var_arr . LBRACKET exp RBRACKET

    LBRACKET  shift, and go to state 86

    $default  reduce using rule 47 (parte_izq)


State 65

   24 lista_args: lista_args COMMA tipo ID parte_arr .

    $default  reduce using rule 24 (lista_args)


State 66

   28 sents: sents . sent
   37 sent: LCURLYB sents . RCURLYB

    LCURLYB  shift, and go to state 51
    RCURLYB  shift, and go to state 87
    IF       shift, and go to state 52
    WHILE    shift, and go to state 53
    DO       shift, and go to state 54
    SWITCH   shift, and go to state 55
    BREAK    shift, and go to state 56
    PRINT    shift, and go to state 57
    ID       shift, and go to state 58
    RETURN   shift, and go to state 59
    FOR      shift, and go to state 60

    sent       go to state 84
    parte_izq  go to state 63
    var_arr    go to state 64


State 67

   30 sent: IF LPAR . cond RPAR sent sentp

    TRUE      shift, and go to state 88
    FALSE     shift, and go to state 89
    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25
    NOT       shift, and go to state 90
    LPAR      shift, and go to state 91

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 92
    cond     go to state 93


State 68

   31 sent: WHILE LPAR . cond RPAR sent

    TRUE      shift, and go to state 88
    FALSE     shift, and go to state 89
    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25
    NOT       shift, and go to state 90
    LPAR      shift, and go to state 91

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 92
    cond     go to state 94


State 69

   32 sent: DO sent . WHILE LPAR cond RPAR SEMICOLON

    WHILE  shift, and go to state 95


State 70

   38 sent: SWITCH LPAR . exp RPAR LCURLYB casos RCURLYB

    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 96


State 71

   39 sent: BREAK SEMICOLON .

    $default  reduce using rule 39 (sent)


State 72

   49 var_arr: ID . LBRACKET exp RBRACKET
   60 exp: ID . LPAR params RPAR

    LBRACKET  shift, and go to state 78
    LPAR      shift, and go to state 97


State 73

   57 exp: CADENA .

    $default  reduce using rule 57 (exp)


State 74

   59 exp: CARACTER .

    $default  reduce using rule 59 (exp)


State 75

   58 exp: numero .

    $default  reduce using rule 58 (exp)


State 76

   50 var_arr: var_arr . LBRACKET exp RBRACKET
   56 exp: var_arr .

    LBRACKET  shift, and go to state 86

    $default  reduce using rule 56 (exp)


State 77

   40 sent: PRINT exp . SEMICOLON
   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    SEMICOLON  shift, and go to state 98
    PLUS       shift, and go to state 99
    MINUS      shift, and go to state 100
    PROD       shift, and go to state 101
    DIV        shift, and go to state 102
    MOD        shift, and go to state 103


State 78

   49 var_arr: ID LBRACKET . exp RBRACKET

    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 104


State 79

   48 parte_izq: ID DOT . ID

    ID  shift, and go to state 105


State 80

   36 sent: RETURN SEMICOLON .

    $default  reduce using rule 36 (sent)


State 81

   35 sent: RETURN exp . SEMICOLON
   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    SEMICOLON  shift, and go to state 106
    PLUS       shift, and go to state 99
    MINUS      shift, and go to state 100
    PROD       shift, and go to state 101
    DIV        shift, and go to state 102
    MOD        shift, and go to state 103


State 82

   33 sent: FOR LPAR . sent SEMICOLON cond SEMICOLON sent RPAR sent

    LCURLYB  shift, and go to state 51
    IF       shift, and go to state 52
    WHILE    shift, and go to state 53
    DO       shift, and go to state 54
    SWITCH   shift, and go to state 55
    BREAK    shift, and go to state 56
    PRINT    shift, and go to state 57
    ID       shift, and go to state 58
    RETURN   shift, and go to state 59
    FOR      shift, and go to state 60

    sent       go to state 107
    parte_izq  go to state 63
    var_arr    go to state 64


State 83

   20 funcs: FUNC tipo ID LPAR args RPAR LCURLYB decls sents RCURLYB . funcs

    FUNC  shift, and go to state 12

    $default  reduce using rule 21 (funcs)

    funcs  go to state 108


State 84

   28 sents: sents sent .

    $default  reduce using rule 28 (sents)


State 85

   34 sent: parte_izq ASSIG . exp SEMICOLON

    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 109


State 86

   50 var_arr: var_arr LBRACKET . exp RBRACKET

    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 110


State 87

   37 sent: LCURLYB sents RCURLYB .

    $default  reduce using rule 37 (sent)


State 88

   70 cond: TRUE .

    $default  reduce using rule 70 (cond)


State 89

   71 cond: FALSE .

    $default  reduce using rule 71 (cond)


State 90

   67 cond: NOT . cond

    TRUE      shift, and go to state 88
    FALSE     shift, and go to state 89
    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25
    NOT       shift, and go to state 90
    LPAR      shift, and go to state 91

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 92
    cond     go to state 111


State 91

   68 cond: LPAR . cond RPAR

    TRUE      shift, and go to state 88
    FALSE     shift, and go to state 89
    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25
    NOT       shift, and go to state 90
    LPAR      shift, and go to state 91

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 92
    cond     go to state 112


State 92

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp
   69 cond: exp . rel exp

    EQ     shift, and go to state 113
    NEQ    shift, and go to state 114
    GT     shift, and go to state 115
    GEQ    shift, and go to state 116
    LT     shift, and go to state 117
    LEQ    shift, and go to state 118
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    PROD   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    rel  go to state 119


State 93

   30 sent: IF LPAR cond . RPAR sent sentp
   65 cond: cond . OR cond
   66     | cond . AND cond

    OR    shift, and go to state 120
    AND   shift, and go to state 121
    RPAR  shift, and go to state 122


State 94

   31 sent: WHILE LPAR cond . RPAR sent
   65 cond: cond . OR cond
   66     | cond . AND cond

    OR    shift, and go to state 120
    AND   shift, and go to state 121
    RPAR  shift, and go to state 123


State 95

   32 sent: DO sent WHILE . LPAR cond RPAR SEMICOLON

    LPAR  shift, and go to state 124


State 96

   38 sent: SWITCH LPAR exp . RPAR LCURLYB casos RCURLYB
   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    PROD   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103
    RPAR   shift, and go to state 125


State 97

   60 exp: ID LPAR . params RPAR

    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25

    RPAR      reduce using rule 62 (params)
    $default  reduce using rule 17 (signo)

    numero       go to state 75
    signo        go to state 27
    var_arr      go to state 76
    exp          go to state 126
    params       go to state 127
    lista_param  go to state 128


State 98

   40 sent: PRINT exp SEMICOLON .

    $default  reduce using rule 40 (sent)


State 99

   51 exp: exp PLUS . exp

    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 129


State 100

   52 exp: exp MINUS . exp

    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 130


State 101

   53 exp: exp PROD . exp

    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 131


State 102

   54 exp: exp DIV . exp

    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 132


State 103

   55 exp: exp MOD . exp

    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 133


State 104

   49 var_arr: ID LBRACKET exp . RBRACKET
   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    RBRACKET  shift, and go to state 134
    PLUS      shift, and go to state 99
    MINUS     shift, and go to state 100
    PROD      shift, and go to state 101
    DIV       shift, and go to state 102
    MOD       shift, and go to state 103


State 105

   48 parte_izq: ID DOT ID .

    $default  reduce using rule 48 (parte_izq)


State 106

   35 sent: RETURN exp SEMICOLON .

    $default  reduce using rule 35 (sent)


State 107

   33 sent: FOR LPAR sent . SEMICOLON cond SEMICOLON sent RPAR sent

    SEMICOLON  shift, and go to state 135


State 108

   20 funcs: FUNC tipo ID LPAR args RPAR LCURLYB decls sents RCURLYB funcs .

    $default  reduce using rule 20 (funcs)


State 109

   34 sent: parte_izq ASSIG exp . SEMICOLON
   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    SEMICOLON  shift, and go to state 136
    PLUS       shift, and go to state 99
    MINUS      shift, and go to state 100
    PROD       shift, and go to state 101
    DIV        shift, and go to state 102
    MOD        shift, and go to state 103


State 110

   50 var_arr: var_arr LBRACKET exp . RBRACKET
   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    RBRACKET  shift, and go to state 137
    PLUS      shift, and go to state 99
    MINUS     shift, and go to state 100
    PROD      shift, and go to state 101
    DIV       shift, and go to state 102
    MOD       shift, and go to state 103


State 111

   65 cond: cond . OR cond
   66     | cond . AND cond
   67     | NOT cond .

    $default  reduce using rule 67 (cond)


State 112

   65 cond: cond . OR cond
   66     | cond . AND cond
   68     | LPAR cond . RPAR

    OR    shift, and go to state 120
    AND   shift, and go to state 121
    RPAR  shift, and go to state 138


State 113

   77 rel: EQ .

    $default  reduce using rule 77 (rel)


State 114

   76 rel: NEQ .

    $default  reduce using rule 76 (rel)


State 115

   73 rel: GT .

    $default  reduce using rule 73 (rel)


State 116

   75 rel: GEQ .

    $default  reduce using rule 75 (rel)


State 117

   72 rel: LT .

    $default  reduce using rule 72 (rel)


State 118

   74 rel: LEQ .

    $default  reduce using rule 74 (rel)


State 119

   69 cond: exp rel . exp

    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 139


State 120

   65 cond: cond OR . cond

    TRUE      shift, and go to state 88
    FALSE     shift, and go to state 89
    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25
    NOT       shift, and go to state 90
    LPAR      shift, and go to state 91

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 92
    cond     go to state 140


State 121

   66 cond: cond AND . cond

    TRUE      shift, and go to state 88
    FALSE     shift, and go to state 89
    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25
    NOT       shift, and go to state 90
    LPAR      shift, and go to state 91

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 92
    cond     go to state 141


State 122

   30 sent: IF LPAR cond RPAR . sent sentp

    LCURLYB  shift, and go to state 51
    IF       shift, and go to state 52
    WHILE    shift, and go to state 53
    DO       shift, and go to state 54
    SWITCH   shift, and go to state 55
    BREAK    shift, and go to state 56
    PRINT    shift, and go to state 57
    ID       shift, and go to state 58
    RETURN   shift, and go to state 59
    FOR      shift, and go to state 60

    sent       go to state 142
    parte_izq  go to state 63
    var_arr    go to state 64


State 123

   31 sent: WHILE LPAR cond RPAR . sent

    LCURLYB  shift, and go to state 51
    IF       shift, and go to state 52
    WHILE    shift, and go to state 53
    DO       shift, and go to state 54
    SWITCH   shift, and go to state 55
    BREAK    shift, and go to state 56
    PRINT    shift, and go to state 57
    ID       shift, and go to state 58
    RETURN   shift, and go to state 59
    FOR      shift, and go to state 60

    sent       go to state 143
    parte_izq  go to state 63
    var_arr    go to state 64


State 124

   32 sent: DO sent WHILE LPAR . cond RPAR SEMICOLON

    TRUE      shift, and go to state 88
    FALSE     shift, and go to state 89
    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25
    NOT       shift, and go to state 90
    LPAR      shift, and go to state 91

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 92
    cond     go to state 144


State 125

   38 sent: SWITCH LPAR exp RPAR . LCURLYB casos RCURLYB

    LCURLYB  shift, and go to state 145


State 126

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp
   64 lista_param: exp .

    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    PROD   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 64 (lista_param)


State 127

   60 exp: ID LPAR params . RPAR

    RPAR  shift, and go to state 146


State 128

   61 params: lista_param .
   63 lista_param: lista_param . COMMA exp

    COMMA  shift, and go to state 147

    $default  reduce using rule 61 (params)


State 129

   51 exp: exp . PLUS exp
   51    | exp PLUS exp .
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    PROD  shift, and go to state 101
    DIV   shift, and go to state 102
    MOD   shift, and go to state 103

    $default  reduce using rule 51 (exp)


State 130

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   52    | exp MINUS exp .
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp

    PROD  shift, and go to state 101
    DIV   shift, and go to state 102
    MOD   shift, and go to state 103

    $default  reduce using rule 52 (exp)


State 131

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   53    | exp PROD exp .
   54    | exp . DIV exp
   55    | exp . MOD exp

    $default  reduce using rule 53 (exp)


State 132

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   54    | exp DIV exp .
   55    | exp . MOD exp

    $default  reduce using rule 54 (exp)


State 133

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp
   55    | exp MOD exp .

    $default  reduce using rule 55 (exp)


State 134

   49 var_arr: ID LBRACKET exp RBRACKET .

    $default  reduce using rule 49 (var_arr)


State 135

   33 sent: FOR LPAR sent SEMICOLON . cond SEMICOLON sent RPAR sent

    TRUE      shift, and go to state 88
    FALSE     shift, and go to state 89
    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25
    NOT       shift, and go to state 90
    LPAR      shift, and go to state 91

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 92
    cond     go to state 148


State 136

   34 sent: parte_izq ASSIG exp SEMICOLON .

    $default  reduce using rule 34 (sent)


State 137

   50 var_arr: var_arr LBRACKET exp RBRACKET .

    $default  reduce using rule 50 (var_arr)


State 138

   68 cond: LPAR cond RPAR .

    $default  reduce using rule 68 (cond)


State 139

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp
   69 cond: exp rel exp .

    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    PROD   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 69 (cond)


State 140

   65 cond: cond . OR cond
   65     | cond OR cond .
   66     | cond . AND cond

    AND  shift, and go to state 121

    $default  reduce using rule 65 (cond)


State 141

   65 cond: cond . OR cond
   66     | cond . AND cond
   66     | cond AND cond .

    $default  reduce using rule 66 (cond)


State 142

   30 sent: IF LPAR cond RPAR sent . sentp

    ELSE  shift, and go to state 149

    $default  reduce using rule 41 (sentp)

    sentp  go to state 150


State 143

   31 sent: WHILE LPAR cond RPAR sent .

    $default  reduce using rule 31 (sent)


State 144

   32 sent: DO sent WHILE LPAR cond . RPAR SEMICOLON
   65 cond: cond . OR cond
   66     | cond . AND cond

    OR    shift, and go to state 120
    AND   shift, and go to state 121
    RPAR  shift, and go to state 151


State 145

   38 sent: SWITCH LPAR exp RPAR LCURLYB . casos RCURLYB

    CASE     shift, and go to state 152
    DEFAULT  shift, and go to state 153

    $default  reduce using rule 45 (casos)

    casos  go to state 154


State 146

   60 exp: ID LPAR params RPAR .

    $default  reduce using rule 60 (exp)


State 147

   63 lista_param: lista_param COMMA . exp

    ID        shift, and go to state 72
    CADENA    shift, and go to state 73
    CARACTER  shift, and go to state 74
    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero   go to state 75
    signo    go to state 27
    var_arr  go to state 76
    exp      go to state 155


State 148

   33 sent: FOR LPAR sent SEMICOLON cond . SEMICOLON sent RPAR sent
   65 cond: cond . OR cond
   66     | cond . AND cond

    SEMICOLON  shift, and go to state 156
    OR         shift, and go to state 120
    AND        shift, and go to state 121


State 149

   42 sentp: ELSE . sent

    LCURLYB  shift, and go to state 51
    IF       shift, and go to state 52
    WHILE    shift, and go to state 53
    DO       shift, and go to state 54
    SWITCH   shift, and go to state 55
    BREAK    shift, and go to state 56
    PRINT    shift, and go to state 57
    ID       shift, and go to state 58
    RETURN   shift, and go to state 59
    FOR      shift, and go to state 60

    sent       go to state 157
    parte_izq  go to state 63
    var_arr    go to state 64


State 150

   30 sent: IF LPAR cond RPAR sent sentp .

    $default  reduce using rule 30 (sent)


State 151

   32 sent: DO sent WHILE LPAR cond RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 158


State 152

   43 casos: CASE . numero sent casos

    PLUS   shift, and go to state 24
    MINUS  shift, and go to state 25

    $default  reduce using rule 17 (signo)

    numero  go to state 159
    signo   go to state 27


State 153

   44 casos: DEFAULT . sent

    LCURLYB  shift, and go to state 51
    IF       shift, and go to state 52
    WHILE    shift, and go to state 53
    DO       shift, and go to state 54
    SWITCH   shift, and go to state 55
    BREAK    shift, and go to state 56
    PRINT    shift, and go to state 57
    ID       shift, and go to state 58
    RETURN   shift, and go to state 59
    FOR      shift, and go to state 60

    sent       go to state 160
    parte_izq  go to state 63
    var_arr    go to state 64


State 154

   38 sent: SWITCH LPAR exp RPAR LCURLYB casos . RCURLYB

    RCURLYB  shift, and go to state 161


State 155

   51 exp: exp . PLUS exp
   52    | exp . MINUS exp
   53    | exp . PROD exp
   54    | exp . DIV exp
   55    | exp . MOD exp
   63 lista_param: lista_param COMMA exp .

    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    PROD   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 63 (lista_param)


State 156

   33 sent: FOR LPAR sent SEMICOLON cond SEMICOLON . sent RPAR sent

    LCURLYB  shift, and go to state 51
    IF       shift, and go to state 52
    WHILE    shift, and go to state 53
    DO       shift, and go to state 54
    SWITCH   shift, and go to state 55
    BREAK    shift, and go to state 56
    PRINT    shift, and go to state 57
    ID       shift, and go to state 58
    RETURN   shift, and go to state 59
    FOR      shift, and go to state 60

    sent       go to state 162
    parte_izq  go to state 63
    var_arr    go to state 64


State 157

   42 sentp: ELSE sent .

    $default  reduce using rule 42 (sentp)


State 158

   32 sent: DO sent WHILE LPAR cond RPAR SEMICOLON .

    $default  reduce using rule 32 (sent)


State 159

   43 casos: CASE numero . sent casos

    LCURLYB  shift, and go to state 51
    IF       shift, and go to state 52
    WHILE    shift, and go to state 53
    DO       shift, and go to state 54
    SWITCH   shift, and go to state 55
    BREAK    shift, and go to state 56
    PRINT    shift, and go to state 57
    ID       shift, and go to state 58
    RETURN   shift, and go to state 59
    FOR      shift, and go to state 60

    sent       go to state 163
    parte_izq  go to state 63
    var_arr    go to state 64


State 160

   44 casos: DEFAULT sent .

    $default  reduce using rule 44 (casos)


State 161

   38 sent: SWITCH LPAR exp RPAR LCURLYB casos RCURLYB .

    $default  reduce using rule 38 (sent)


State 162

   33 sent: FOR LPAR sent SEMICOLON cond SEMICOLON sent . RPAR sent

    RPAR  shift, and go to state 164


State 163

   43 casos: CASE numero sent . casos

    CASE     shift, and go to state 152
    DEFAULT  shift, and go to state 153

    $default  reduce using rule 45 (casos)

    casos  go to state 165


State 164

   33 sent: FOR LPAR sent SEMICOLON cond SEMICOLON sent RPAR . sent

    LCURLYB  shift, and go to state 51
    IF       shift, and go to state 52
    WHILE    shift, and go to state 53
    DO       shift, and go to state 54
    SWITCH   shift, and go to state 55
    BREAK    shift, and go to state 56
    PRINT    shift, and go to state 57
    ID       shift, and go to state 58
    RETURN   shift, and go to state 59
    FOR      shift, and go to state 60

    sent       go to state 166
    parte_izq  go to state 63
    var_arr    go to state 64


State 165

   43 casos: CASE numero sent casos .

    $default  reduce using rule 43 (casos)


State 166

   33 sent: FOR LPAR sent SEMICOLON cond SEMICOLON sent RPAR sent .

    $default  reduce using rule 33 (sent)
